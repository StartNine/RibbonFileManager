<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="urn:fluent-ribbon"
                    xmlns:apictrl="clr-namespace:Start9.Api.Controls;assembly=Start9.Api"
                    xmlns:local="clr-namespace:RibbonFileManager"
                    xmlns:converters="clr-namespace:Fluent.Converters;assembly=Fluent"
                    xmlns:disk="clr-namespace:Start9.Api.DiskItems;assembly=Start9.Api"
                    xmlns:apiobj="clr-namespace:Start9.Api.Objects;assembly=Start9.Api">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Fluent;Component/Themes/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/PresentationFramework.Aero;component/themes/aero.normalcolor.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <local:ThicknessLeftToSubtractDoubleConverter x:Key="ThicknessLeftToSubtractDoubleConverter"/>
    <local:DoubleAdderConverter x:Key="DoubleAdderConverter"/>
    <local:DoubleComparisonConverter x:Key="DoubleComparisonConverter"/>
    <local:StringIsNullOrWhiteSpaceConverter x:Key="StringIsNullOrWhiteSpaceConverter"/>
    <apiobj:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter"/>
    <local:DoubleToThicknessConverter x:Key="DoubleToThicknessConverter"/>

    <converters:ObjectToImageConverter x:Key="ObjectToImageConverter"/>

    <SolidColorBrush x:Key="AeromaticRibbonFadedForegroundBrush">#FF9FAEC2</SolidColorBrush>

    <DropShadowEffect x:Key="CaptionButtonGlyphOutlineEffect" Color="#FF535666" Direction="0" ShadowDepth="0" BlurRadius="3" Opacity="1"/>

    <LinearGradientBrush x:Key="CaptionButtonGlyphBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="White"/>
            <GradientStop Offset="1" Color="#FFDADADA"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <VisualBrush x:Key="RibbonButtonHoverVisualBrush">
        <VisualBrush.Visual>
            <Border CornerRadius="2" Background="#FFB0C0F0">
                <Border BorderBrush="#FF304070">
                    <Border.Background>
                        <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1">
                            <RadialGradientBrush.GradientStops>
                                <GradientStop Offset="0" Color="#FFFFFFFF"/>
                                <GradientStop Offset="0.5" Color="#4FFFFFFF"/>
                                <GradientStop Offset="1" Color="#7FFFFFFF"/>
                            </RadialGradientBrush.GradientStops>
                        </RadialGradientBrush>
                    </Border.Background>
                </Border>
            </Border>
        </VisualBrush.Visual>
    </VisualBrush>

    <Style x:Key="{x:Type local:MainWindow}" TargetType="{x:Type local:MainWindow}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,54,0,0" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="FontFamily" Value="Selawik"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="ShadowOffsetThickness" Value="10,7,13,15"/>
        <Setter Property="ShadowStyle">
            <Setter.Value>
                <Style TargetType="Window">
                    <Setter Property="WindowStyle" Value="None"/>
                    <Setter Property="ResizeMode" Value="NoResize"/>
                    <Setter Property="AllowsTransparency" Value="True"/>
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Window">
                                <Grid x:Name="ShadowGrid" ClipToBounds="True">
                                    <Grid.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Grid Background="#01000000" Margin="0" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                    <Border BorderThickness="10,7,13,15" CornerRadius="0" Background="Transparent" BorderBrush="Black"/>
                                                    <Border Margin="5,2,8,10" BorderThickness="5" CornerRadius="9" Background="Transparent" BorderBrush="Black"/>
                                                </Grid>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Grid.OpacityMask>
                                    <Grid.Background>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Grid Background="#01000000" Margin="0" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="15"/>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="15"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="15"/>
                                                        <RowDefinition/>
                                                        <RowDefinition Height="15"/>
                                                    </Grid.RowDefinitions>
                                                    <Canvas Grid.Column="0" Grid.Row="0">
                                                        <Canvas.Background>
                                                            <RadialGradientBrush GradientOrigin="1,1" Center="1,1" RadiusX="1" RadiusY="1">
                                                                <RadialGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="#7F000000" />
                                                                    <GradientStop Offset="1" Color="#00000000" />
                                                                </RadialGradientBrush.GradientStops>
                                                            </RadialGradientBrush>
                                                        </Canvas.Background>
                                                    </Canvas>
                                                    <Canvas Grid.Column="1" Grid.Row="0">
                                                        <Canvas.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="#00000000" />
                                                                    <GradientStop Offset="1" Color="#7F000000" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Canvas.Background>
                                                    </Canvas>
                                                    <Canvas Grid.Column="2" Grid.Row="0">
                                                        <Canvas.Background>
                                                            <RadialGradientBrush GradientOrigin="0,1" Center="0,1" RadiusX="1" RadiusY="1">
                                                                <RadialGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="#7F000000" />
                                                                    <GradientStop Offset="1" Color="#00000000" />
                                                                </RadialGradientBrush.GradientStops>
                                                            </RadialGradientBrush>
                                                        </Canvas.Background>
                                                    </Canvas>
                                                    <Canvas Grid.Column="2" Grid.Row="1">
                                                        <Canvas.Background>
                                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="#00000000" />
                                                                    <GradientStop Offset="1" Color="#7F000000" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Canvas.Background>
                                                    </Canvas>
                                                    <Canvas Grid.Column="2" Grid.Row="2">
                                                        <Canvas.Background>
                                                            <RadialGradientBrush GradientOrigin="0,0" Center="0,0" RadiusX="1" RadiusY="1">
                                                                <RadialGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="#7F000000" />
                                                                    <GradientStop Offset="1" Color="#00000000" />
                                                                </RadialGradientBrush.GradientStops>
                                                            </RadialGradientBrush>
                                                        </Canvas.Background>
                                                    </Canvas>
                                                    <Canvas Grid.Column="1" Grid.Row="2">
                                                        <Canvas.Background>
                                                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="#00000000" />
                                                                    <GradientStop Offset="1" Color="#7F000000" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Canvas.Background>
                                                    </Canvas>
                                                    <Canvas Grid.Column="0" Grid.Row="2">
                                                        <Canvas.Background>
                                                            <RadialGradientBrush GradientOrigin="1,0" Center="1,0" RadiusX="1" RadiusY="1">
                                                                <RadialGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="#7F000000" />
                                                                    <GradientStop Offset="1" Color="#00000000" />
                                                                </RadialGradientBrush.GradientStops>
                                                            </RadialGradientBrush>
                                                        </Canvas.Background>
                                                    </Canvas>
                                                    <Canvas Grid.Column="0" Grid.Row="1">
                                                        <Canvas.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="#00000000" />
                                                                    <GradientStop Offset="1" Color="#7F000000" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Canvas.Background>
                                                    </Canvas>
                                                    <Canvas Grid.Column="1" Grid.Row="1" Background="#7F000000" />
                                                </Grid>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Grid.Background>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ShadowGrid" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ShadowGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                    <Trigger Property="IsHitTestVisible" Value="True">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type apictrl:DecoratableWindow}">
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <Style x:Key="BorderThumb" TargetType="Thumb">
                                <Setter Property="SnapsToDevicePixels" Value="true" />
                                <Setter Property="OverridesDefaultStyle" Value="true" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle MinWidth="4" MinHeight="4" StrokeThickness="0">
                                                <Rectangle.Fill>
                                                    <SolidColorBrush Color="#01000000" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="CaptionButtonStyle" TargetType="{x:Type Button}">
                                <Setter Property="UseLayoutRounding" Value="True"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="IdleBackground" BorderBrush="#C0000000" CornerRadius="0" BorderThickness="0,0,1,0">
                                                    <Border x:Name="Border" BorderThickness="1" CornerRadius="{TemplateBinding BorderThickness}">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="#40FFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#30FFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#20000000"/>
                                                                    <GradientStop Offset="1" Color="#10000000"/>
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                        <Border.BorderBrush>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0.125" Color="#C0FFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#A0FFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#50C0C0C0"/>
                                                                    <GradientStop Offset="1" Color="#40C0C0C0"/>
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Border.BorderBrush>
                                                    </Border>
                                                </Border>
                                                <Border x:Name="HoverBackground" BorderBrush="#C0000000" CornerRadius="0" BorderThickness="0,0,1,0" Opacity="0">
                                                    <Border>
                                                        <Border.Background>
                                                            <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1">
                                                                <RadialGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0" Color="#FF2FC8D5"/>
                                                                    <GradientStop Offset="1" Color="#FF1366A0"/>
                                                                </RadialGradientBrush.GradientStops>
                                                            </RadialGradientBrush>
                                                        </Border.Background>
                                                        <Border BorderThickness="1" CornerRadius="{TemplateBinding BorderThickness}">
                                                            <Border.Background>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Offset="0.125" Color="#A0FFFFFF"/>
                                                                        <GradientStop Offset="0.5" Color="#7FFFFFFF"/>
                                                                        <GradientStop Offset="0.5" Color="#20000000"/>
                                                                        <GradientStop Offset="1" Color="#10000000"/>
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Border.BorderBrush>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Offset="0.125" Color="#C0FFFFFF"/>
                                                                        <GradientStop Offset="0.5" Color="#A0FFFFFF"/>
                                                                        <GradientStop Offset="0.5" Color="#50C0C0C0"/>
                                                                        <GradientStop Offset="1" Color="#40C0C0C0"/>
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Border.BorderBrush>
                                                            <Canvas VerticalAlignment="Bottom" Height="1" Margin="0,-1">
                                                                <Canvas.Background>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                        <LinearGradientBrush.GradientStops>
                                                                            <GradientStop Offset="0" Color="#000AFEFB"/>
                                                                            <GradientStop Offset="0.5" Color="#FF0AFEFB"/>
                                                                            <GradientStop Offset="1" Color="#000AFEFB"/>
                                                                        </LinearGradientBrush.GradientStops>
                                                                    </LinearGradientBrush>
                                                                </Canvas.Background>
                                                            </Canvas>
                                                        </Border>
                                                    </Border>
                                                </Border>
                                                <ContentPresenter Content="{TemplateBinding Content}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyle}">
                                <Setter Property="BorderThickness" Value="0,0,3,0"/>
                                <Setter Property="Width" Value="27"/>
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Border BorderBrush="{DynamicResource CaptionButtonGlyphBrush}" Width="10" Height="8" BorderThickness="0,0,0,3" Effect="{DynamicResource CaptionButtonGlyphOutlineEffect}"/>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="MaximizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyle}">
                                <Setter Property="Width" Value="27"/>
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Border BorderBrush="{DynamicResource CaptionButtonGlyphBrush}" Width="10" Height="8" BorderThickness="2" Effect="{DynamicResource CaptionButtonGlyphOutlineEffect}"/>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="RestoreButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyle}">
                                <Setter Property="Width" Value="27"/>
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Grid Width="12" Height="12">
                                            <Border BorderBrush="{DynamicResource CaptionButtonGlyphBrush}" Width="10" Height="10" HorizontalAlignment="Left" VerticalAlignment="Bottom" BorderThickness="2" Effect="{DynamicResource CaptionButtonGlyphOutlineEffect}"/>
                                            <Border BorderBrush="{DynamicResource CaptionButtonGlyphBrush}" Width="10" Height="10" HorizontalAlignment="Right" VerticalAlignment="Top" BorderThickness="0,2,2,0" Effect="{DynamicResource CaptionButtonGlyphOutlineEffect}"/>
                                        </Grid>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyle}">
                                <Setter Property="Width" Value="47"/>
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Path Data="M 0 0 L 3 0 L 4.5 2 L 6 0 L 9 0 L 6 3 L 6 5 L 9 8 L 6 8 L 4.5 6 L 3 8 L 0 8 L 3 5 L 3 3 Z" Fill="{DynamicResource CaptionButtonGlyphBrush}" Stroke="Transparent" StrokeThickness="0" Effect="{DynamicResource CaptionButtonGlyphOutlineEffect}" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border x:Name="IdleBackground" CornerRadius="0,3,0,0">
                                                    <Border.Background>
                                                        <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1">
                                                            <RadialGradientBrush.GradientStops>
                                                                <GradientStop Offset="0" Color="#CCDE704D"/>
                                                                <GradientStop Offset="1" Color="#CCA11A07"/>
                                                            </RadialGradientBrush.GradientStops>
                                                        </RadialGradientBrush>
                                                    </Border.Background>
                                                    <Border BorderThickness="1" CornerRadius="0,3,0,0">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0.125" Color="#A0FFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#7FFFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#10FFFFFF"/>
                                                                    <GradientStop Offset="1" Color="#00FFFFFF"/>
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                        <Border.BorderBrush>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0.125" Color="#C0FFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#A0FFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#50FFFFFF"/>
                                                                    <GradientStop Offset="1" Color="#40FFFFFF"/>
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Border.BorderBrush>
                                                    </Border>
                                                </Border>
                                                <Border x:Name="HoverBackground" CornerRadius="0,3,0,0" Opacity="0">
                                                    <Border.Background>
                                                        <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1">
                                                            <RadialGradientBrush.GradientStops>
                                                                <GradientStop Offset="0" Color="#FFE6942F"/>
                                                                <GradientStop Offset="1" Color="#FFA41906"/>
                                                            </RadialGradientBrush.GradientStops>
                                                        </RadialGradientBrush>
                                                    </Border.Background>
                                                    <Border BorderThickness="1" CornerRadius="0,3,0,0">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0.125" Color="#A0FFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#7FFFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#10FFFFFF"/>
                                                                    <GradientStop Offset="1" Color="#00FFFFFF"/>
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                        <Border.BorderBrush>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Offset="0.125" Color="#C0FFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#A0FFFFFF"/>
                                                                    <GradientStop Offset="0.5" Color="#50FFFFFF"/>
                                                                    <GradientStop Offset="1" Color="#40FFFFFF"/>
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Border.BorderBrush>
                                                        <Canvas VerticalAlignment="Bottom" Height="1" Margin="0,-1">
                                                            <Canvas.Background>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Offset="0" Color="#00F5E677"/>
                                                                        <GradientStop Offset="0.5" Color="#FFF5E677"/>
                                                                        <GradientStop Offset="1" Color="#00F5E677"/>
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Canvas.Background>
                                                        </Canvas>
                                                    </Border>
                                                </Border>
                                                <ContentPresenter Content="{TemplateBinding Content}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>
                    <Border x:Name="WindowRootBorder" BorderBrush="#C0000000" BorderThickness="1" CornerRadius="4" ClipToBounds="True">
                        <Border x:Name="WindowClipBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="4" Background="Transparent" ClipToBounds="True">
                            <Grid x:Name="WindowRoot" Margin="{TemplateBinding Padding}" ClipToBounds="True">
                                <DockPanel LastChildFill="True" Background="Transparent">
                                    <Grid x:Name="PART_Titlebar" HorizontalAlignment="Stretch" Margin="0" Height="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter=Top}" Visibility="Visible" Opacity="1" DockPanel.Dock="Top">
                                        <Border x:Name="ActiveTitlebarBackground" CornerRadius="4,4,0,0" BorderThickness="1,1,1,0" BorderBrush="#C0FFFFFF">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#FF98B4D0"/>
                                                        <GradientStop Offset="1" Color="#FFB9D1EA"/>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Border x:Name="InactiveTitlebarBackground" CornerRadius="4,4,0,0" BorderThickness="1,1,1,0" BorderBrush="#90FFFFFF" Visibility="Hidden">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#FFBFCDDB"/>
                                                        <GradientStop Offset="1" Color="#FFD7E4F2"/>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <!--Label x:Name="TitleText" Content="{TemplateBinding Title}" HorizontalAlignment="Stretch" VerticalAlignment="Top" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="26" Margin="0,-2" FontSize="12" Foreground="White">
                                            <Label.Effect>
                                                <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320"
                                                              ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                                            </Label.Effect>
                                        </Label-->
                                        <Grid>
                                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Width="16" Height="16" Margin="3">
                                                <Canvas.Background>
                                                    <ImageBrush ImageSource="{TemplateBinding Icon}" />
                                                </Canvas.Background>
                                            </Canvas>
                                            <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="{Binding ActualWidth, Source={x:Reference TitleBarContent}, Converter={StaticResource DoubleToThicknessConverter}, ConverterParameter='left'}">
                                                <Grid.Effect>
                                                    <DropShadowEffect x:Name="GlowShadowEffect" Color="White" Direction="90" ShadowDepth="0" BlurRadius="10" Opacity="1"/>
                                                </Grid.Effect>
                                                <Label Content="{TemplateBinding Title}" Margin="2" VerticalAlignment="Center" Height="Auto" TextBlock.Foreground="White" Visibility="Visible">
                                                    <Label.Effect>
                                                        <BlurEffect KernelType="Gaussian" Radius="10"/>
                                                    </Label.Effect>
                                                </Label>
                                                <Label Content="{TemplateBinding Title}" Margin="5,2" HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto" />
                                            </Grid>
                                            <ContentControl x:Name="TitleBarContent" Content="{TemplateBinding TitleBarContent}" HorizontalAlignment="Left"/>
                                            <Border x:Name="CaptionButtons" BorderBrush="#C0FFFFFF" BorderThickness="1,0,0,1" CornerRadius="0,0,0,4" HorizontalAlignment="Right" VerticalAlignment="Top">
                                                <Border BorderBrush="#C0000000" BorderThickness="1,0,0,1" CornerRadius="0,0,0,4">
                                                    <StackPanel Orientation="Horizontal" Height="18">
                                                        <!--RenderTransformOrigin="1,0">
                                        <StackPanel.RenderTransform>
                                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                                        </StackPanel.RenderTransform-->
                                                        <!--Width="18" VerticalAlignment="Stretch" -->
                                                        <Button x:Name="PART_MinimizeButton" Style="{DynamicResource MinimizeButtonStyle}"/>
                                                        <!--Border Width="6" Height="9" Background="Transparent" BorderThickness="0,0,0,2" BorderBrush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"/-->
                                                        <!--0-->
                                                        <Grid x:Name="MaxRestButtonGrid" >
                                                            <!--Margin="-1,0,1,0"-->
                                                            <Button x:Name="PART_MaximizeButton" Style="{DynamicResource MaximizeButtonStyle}"/>
                                                            <!--Border Width="10" Height="9" BorderThickness="1,2,1,1" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/-->
                                                            <!--1-->
                                                            <Button x:Name="PART_RestoreButton" Visibility="Hidden" Style="{DynamicResource RestoreButtonStyle}"/>
                                                        </Grid>
                                                        <Button x:Name="PART_CloseButton" Style="{DynamicResource CloseButtonStyle}"/>
                                                    </StackPanel>
                                                </Border>
                                            </Border>
                                            <Border x:Name="DialogFilm" CornerRadius="12,12,0,0" IsHitTestVisible="False" Background="#C0000000" Visibility="Hidden" Margin="0,0,0,-12"/>
                                        </Grid>
                                    </Grid>
                                    <Border x:Name="Body" Background="{TemplateBinding Background}" CornerRadius="0,0,4,4" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Stretch" Margin="0" Padding="0">
                                        <ContentPresenter Content="{TemplateBinding Content}"/>
                                    </Border>
                                </DockPanel>
                                <Border x:Name="FullWindowContentGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Visible" Margin="{TemplateBinding Padding}" CornerRadius="4" ClipToBounds="True">
                                    <ContentPresenter Content="{TemplateBinding FullWindowContent}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Visible"/>
                                </Border>
                                <Grid>
                                    <Grid x:Name="ResizeGrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Thumb x:Name="PART_ThumbBottom" HorizontalAlignment="Stretch" Cursor="SizeNS"
                                   Grid.Column="0" Background="{x:Null}" Margin="3,0" Grid.ColumnSpan="3" Grid.Row="3"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbTop" HorizontalAlignment="Stretch" Cursor="SizeNS" Grid.Column="0"
                                   Background="{x:Null}" Margin="3,0" Grid.ColumnSpan="3" Height="4"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbRight" Cursor="SizeWE" Grid.Column="2" Grid.RowSpan="4"
                                   Background="{x:Null}" Margin="0,3" Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbLeft" Cursor="SizeWE" Grid.Column="0" Grid.RowSpan="4"
                                   HorizontalContentAlignment="Right" Background="{x:Null}" Margin="0,3"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbBottomRightCorner" HorizontalAlignment="Right" Cursor="SizeNWSE"
                                   Grid.Row="3" Grid.Column="3" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbTopRightCorner" HorizontalAlignment="Right" Cursor="SizeNESW"
                                   Grid.Row="0" Grid.Column="2" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbTopLeftCorner" HorizontalAlignment="Left" Cursor="SizeNWSE"
                                   Grid.Row="0" Grid.Column="0" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                        <Thumb x:Name="PART_ThumbBottomLeftCorner" HorizontalAlignment="Left" Cursor="SizeNESW"
                                   Grid.Row="3" Grid.Column="0" Background="{x:Null}"
                                   Style="{DynamicResource BorderThumb}" />
                                    </Grid>
                                    <Thumb x:Name="PART_ResizeGrip" Style="{DynamicResource ResizeGripThumb}" Visibility="Hidden" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="3" Grid.Row="3"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" Value="7"/>
                            <Setter Property="MaxWidth" Value="{x:Static SystemParameters.PrimaryScreenWidth}"/>
                            <Setter Property="MaxHeight" Value="{x:Static SystemParameters.PrimaryScreenHeight}"/>
                            <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="ActiveTitlebarBackground" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="InactiveTitlebarBackground" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="WindowStyle" Value="None">
                            <Setter TargetName="PART_Titlebar" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="ResizeGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BreadcrumbStyle" TargetType="{x:Type Fluent:SplitButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Size" Value="Middle"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:SplitButton}">
                    <Grid>
                        <Border x:Name="OuterHoverBackground" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#7F89CEFF"/>
                                        <GradientStop Offset="0.5" Color="#7F7CC2FF"/>
                                        <GradientStop Offset="1" Color="#7F89CEFF"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="SelectedBackground" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#FF57B2FF"/>
                                        <GradientStop Offset="0.5" Color="#FF4A9EFF"/>
                                        <GradientStop Offset="1" Color="#FF57B2FF"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border BorderThickness="1" Name="PART_ButtonBorder" BorderBrush="Transparent" Background="Transparent" VerticalAlignment="Stretch">
                            <DockPanel Name="stackPanel" KeyboardNavigation.TabNavigation="Local">
                                <Border BorderThickness="0,0,0,0" Name="downBorder" BorderBrush="Transparent" Background="Transparent" Margin="0,0,0,0" DockPanel.Dock="Right">
                                    <Grid>
                                        <Border x:Name="LowerHoverBackground" Opacity="0">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#FF89CEFF"/>
                                                        <GradientStop Offset="0.5" Color="#FF7CC2FF"/>
                                                        <GradientStop Offset="1" Color="#FF89CEFF"/>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Border x:Name="LowerSelectedBackground" Opacity="0">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#FF57B2FF"/>
                                                        <GradientStop Offset="0.5" Color="#FF4A9EFF"/>
                                                        <GradientStop Offset="1" Color="#FF57B2FF"/>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Path Data="M 0 0 L 4 4 L 8 0 Z" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Stroke="Transparent" StrokeThickness="0" Margin="5"/>
                                    </Grid>
                                </Border>
                                <Grid>
                                    <Border x:Name="HoverBackground" Opacity="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF89CEFF"/>
                                                    <GradientStop Offset="0.5" Color="#FF7CC2FF"/>
                                                    <GradientStop Offset="1" Color="#FF89CEFF"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Fluent:ToggleButton x:Name="PART_Button" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" CommandTarget="{TemplateBinding CommandTarget}" Margin="0,0,0,0" Height="Auto" Width="Auto" Style="{DynamicResource InnerButtonStyle}" IsEnabled="{TemplateBinding IsButtonEnabled}" ToolTip="{TemplateBinding ToolTip}" GroupName="{Binding GroupName, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsDefinitive="{TemplateBinding IsDefinitive}" CanAddToQuickAccessToolBar="{TemplateBinding CanAddButtonToQuickAccessToolBar}" Foreground="{TemplateBinding Foreground}">
                                        <!--Header="{TemplateBinding Header}" -->
                                    </Fluent:ToggleButton>
                                    <Fluent:TwoLineLabel x:Name="controlLabel" Text="{TemplateBinding Header}" Style="{DynamicResource TwoLineLabelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" HasGlyph="False" HasTwoLines="False" Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False"/>
                                </Grid>
                            </DockPanel>
                        </Border>
                        <Popup x:Name="PART_Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Margin="0,0,-4,0" VerticalAlignment="Top" Grid.ColumnSpan="2">
                            <Grid Name="DropDown" IsEnabled="{TemplateBinding IsEnabled}" SnapsToDevicePixels="True" Margin="0" VerticalAlignment="Top">
                                <Border x:Name="PART_DropDownBorder" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True" Background="{DynamicResource ContextMenuBackgroundBrush}" BorderBrush="{DynamicResource ContextMenuBorderBrush}" BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                    <!--d:LayoutOverrides="Width, Height"-->
                                    <Grid Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                        <Grid Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Rectangle x:Name="StackSizingAid" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True"/>
                                            <ScrollViewer x:Name="PART_ScrollViewer" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" ClipToBounds="True">
                                                <StackPanel x:Name="PART_MenuPanel" Orientation="Vertical" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="3"/>
                                            </ScrollViewer>
                                            <Border x:Name="resizeBorder" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="11" Background="Transparent" BorderBrush="Transparent" BorderThickness="0,1,0,0" Grid.Row="1" CornerRadius="0,0,1,1" Visibility="Collapsed">
                                                <Grid>
                                                    <Thumb x:Name="PART_ResizeVerticalThumb" HorizontalAlignment="Stretch" Margin="0,0,0,-90" Width="Auto" Height="10" VerticalAlignment="Top" Cursor="SizeNS" Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                                                    <Thumb x:Name="PART_ResizeBothThumb" HorizontalAlignment="Right" Margin="0,0,0,-90" Width="10" Height="10" VerticalAlignment="Top" Cursor="SizeNWSE" Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode" Value="None">
                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="Both">
                            <Setter Property="Visibility" TargetName="PART_ResizeVerticalThumb" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_ResizeBothThumb" Value="Visible" />
                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="Vertical">
                            <Setter Property="Visibility" TargetName="PART_ResizeBothThumb" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_ResizeVerticalThumb" Value="Visible" />
                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                            <Setter Property="Background" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                        </Trigger>
                        <!--Trigger Property="Size" Value="Middle">
                            <Setter Property="Width" TargetName="controlLabel" Value="10" />
                            <Setter Property="Margin" TargetName="controlLabel" Value="0,-19,0,0" />
                            <Setter Property="Text" TargetName="controlLabel" Value="" />
                        </Trigger-->
                        <Trigger Property="IsButtonEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_Button" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            
                            <Setter Property="IsEnabled" TargetName="PART_Button" Value="False" />
                            <!--Setter Property="Opacity" TargetName="controlLabel" Value="0.25" /-->
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LowerSelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LowerSelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                            <Setter Property="Background" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" /-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="PART_Button" />
                                <Condition Property="IsDropDownOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <!--Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" /-->
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0625" />
                                        <DoubleAnimation Storyboard.TargetName="OuterHoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0625" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                        <DoubleAnimation Storyboard.TargetName="OuterHoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="downBorder" />
                                <Condition Property="IsDropDownOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LowerHoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LowerHoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <!--Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                            <Setter Property="Background" TargetName="downBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                            <Setter Property="BorderBrush" TargetName="downBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" /-->
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="OuterHoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0625" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="OuterHoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Size" Value="Large">
                <Setter Property="Height" Value="68" />
                <Setter Property="Fluent:KeyTip.HorizontalAlignment" Value="Center" />
                <Setter Property="Fluent:KeyTip.VerticalAlignment" Value="Bottom" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter Property="Height" Value="22" />
                <Setter Property="Fluent:KeyTip.HorizontalAlignment" Value="Right" />
                <Setter Property="Fluent:KeyTip.VerticalAlignment" Value="Center" />
                <Setter Property="Fluent:KeyTip.Margin" Value="0,0,-5,0" />
            </Trigger>
            <Trigger Property="Size" Value="Small">
                <Setter Property="Height" Value="22" />
                <Setter Property="Width" Value="32" />
                <Setter Property="Fluent:KeyTip.HorizontalAlignment" Value="Right" />
                <Setter Property="Fluent:KeyTip.VerticalAlignment" Value="Center" />
                <Setter Property="Fluent:KeyTip.Margin" Value="0,0,-5,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Fluent:QuickAccessMenuItem}" TargetType="{x:Type Fluent:QuickAccessMenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.MenuItem.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:QuickAccessMenuItem}">
                    <Border Name="Border" Padding="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0">
                                <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                    <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                                </Border>
                            </Border>
                            <Label x:Name="Check" FontFamily="Marlett" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,0" Foreground="{TemplateBinding Foreground}" Visibility="Hidden">b</Label>
                            <Grid x:Name="CheckOffsetGrid" Margin="0">
                                <ContentPresenter Name="Content" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="True">
                            <Setter TargetName="CheckOffsetGrid" Property="Margin" Value="12,0,0,0"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Description, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:IsNullConverter.Instance}}" Value="False">
                            <Setter Property="Template" Value="{DynamicResource MenuItemWithDescriptionTemplate}" />
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" FontWeight="Bold" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Fluent:MenuItem.IsSplited" Value="True" />
                    <Condition Property="HasItems" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{DynamicResource SplitedMenuItemTemplate}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Fluent:MenuItem.IsSplited" Value="False" />
                    <Condition Property="HasItems" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{DynamicResource HeaderMenuItemTemplate}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Fluent:Button}" TargetType="{x:Type Fluent:Button}">
        <Setter Property="Height" Value="68" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="2,1"/>
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:Button}">
                    <Grid UseLayoutRounding="True">
                        <Border x:Name="HoverBackground" CornerRadius="2" BorderBrush="#FF94AECE" BorderThickness="1" Opacity="0" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="Size" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <Border.Effect>
                                <DropShadowEffect Color="Black" Direction="270" BlurRadius="5" ShadowDepth="3" Opacity="0.125"/>
                            </Border.Effect>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#FFD6E7F9"/>
                                        <GradientStop Offset="0.5" Color="#FFB2CCE8"/>
                                        <GradientStop Offset="1" Color="#FFD6E7F9"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border CornerRadius="1" BorderBrush="#FFF8FCFF" BorderThickness="1">
                                <Border.Background>
                                    <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1" RadiusX="1">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFFFFFFF"/>
                                            <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                        </RadialGradientBrush.GradientStops>
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                        <!--Border x:Name="HoverBackground" CornerRadius="2" BorderBrush="#FFA1A9B3" BorderThickness="1" Opacity="0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" Direction="270" BlurRadius="5" ShadowDepth="3" Opacity="0.125"/>
                            </Border.Effect>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#FFDEE4EB"/>
                                        <GradientStop Offset="0.5" Color="#FFD3D9E0"/>
                                        <GradientStop Offset="1" Color="#FFDEE4EB"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border CornerRadius="1" BorderBrush="#FFF0F2F6" BorderThickness="1">
                                <Border.Background>
                                    <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1" RadiusX="1">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFFFFFFF"/>
                                            <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                        </RadialGradientBrush.GradientStops>
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border-->
                        <Canvas x:Name="SizingAid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <StackPanel x:Name="stackPanel" Width="Auto" Margin="{TemplateBinding Padding}" Orientation="Horizontal">
                            <ContentPresenter x:Name="largeIconImage" HorizontalAlignment="Center" VerticalAlignment="Center" Width="32" Height="32" Margin="0,2,0,0" SnapsToDevicePixels="True" Visibility="Collapsed" Content="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToImageConverter}, ConverterParameter='32,32'}" IsHitTestVisible="False"/>
                            <ContentPresenter x:Name="iconImage" HorizontalAlignment="Center" VerticalAlignment="Center" Width="24" Height="24" Margin="-4" SnapsToDevicePixels="True" Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToImageConverter}, ConverterParameter='16,16'}" IsHitTestVisible="False"/>
                            <Fluent:TwoLineLabel x:Name="controlLabel" Text="{TemplateBinding Header}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="2,0" HasTwoLines="False"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--DataTrigger Binding="{Binding IsManipulationEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}}" Value="False">
                            <Setter TargetName="IdleReveal" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="HoverReveal" Property="Visibility" Value="Hidden"/>
                        </DataTrigger-->
                        <Trigger Property="Size" Value="Small">
                            <Setter Property="Visibility" TargetName="controlLabel" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Size" Value="Large">
                            <Setter Property="HasTwoLines" TargetName="controlLabel" Value="True" />
                            <Setter Property="Orientation" TargetName="stackPanel" Value="Vertical" />
                            <Setter Property="Visibility" TargetName="largeIconImage" Value="Visible" />
                            <Setter Property="Visibility" TargetName="iconImage" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="controlLabel" Value="2,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleX" To="0.9" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleY" To="0.9" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="iconImage" Storyboard.TargetProperty="Opacity" To="0.25" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="largeIconImage" Storyboard.TargetProperty="Opacity" To="0.25" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="controlLabel" Storyboard.TargetProperty="Opacity" To="0.25" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="iconImage" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="largeIconImage" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="controlLabel" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--Setter Property="Opacity" TargetName="iconImage" Value="0.25" />
                            <Setter Property="Opacity" TargetName="controlLabel" Value="0.25" /-->
                            <Setter Property="Effect" TargetName="iconImage">
                                <Setter.Value>
                                    <Fluent:GrayscaleEffect />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Effect" TargetName="largeIconImage">
                                <Setter.Value>
                                    <Fluent:GrayscaleEffect />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Size" Value="Large">
                <Setter Property="Height" Value="68" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter Property="Height" Value="22" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Trigger>
            <Trigger Property="Size" Value="Small">
                <Setter Property="Height" Value="22" />
                <Setter Property="Width" Value="22" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Fluent:DropDownButton}" TargetType="{x:Type Fluent:DropDownButton}">
        <Setter Property="Height" Value="68" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="2,1"/>
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="Fluent:KeyTip.AutoPlacement" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:DropDownButton}">
                    <ControlTemplate.Resources>
                        <Style BasedOn="{StaticResource MenuSeparatorStyle}" TargetType="{x:Type Separator}" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="PART_ButtonBorder" BorderThickness="0" Background="Transparent" BorderBrush="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto">
                            <Grid>
                                <Border x:Name="HoverBackground" CornerRadius="2" BorderBrush="#FF94AECE" BorderThickness="1" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <ScaleTransform x:Name="Size" ScaleX="1" ScaleY="1"/>
                                    </Border.RenderTransform>
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" Direction="270" BlurRadius="5" ShadowDepth="3" Opacity="0.125"/>
                                    </Border.Effect>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FFD6E7F9"/>
                                                <GradientStop Offset="0.5" Color="#FFB2CCE8"/>
                                                <GradientStop Offset="1" Color="#FFD6E7F9"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border CornerRadius="1" BorderBrush="#FFF8FCFF" BorderThickness="1">
                                        <Border.Background>
                                            <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1" RadiusX="1">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FFFFFFFF"/>
                                                    <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Border>
                                <Canvas x:Name="SizingAid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                <StackPanel x:Name="stackPanel" Width="Auto" Margin="{TemplateBinding Padding}" Orientation="Horizontal">
                                    <ContentPresenter x:Name="largeIconImage" HorizontalAlignment="Center" VerticalAlignment="Center" Width="32" Height="32" Margin="0,2,0,0" SnapsToDevicePixels="True" Visibility="Collapsed" Content="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToImageConverter}, ConverterParameter='32,32'}"/>
                                    <ContentPresenter x:Name="iconImage" HorizontalAlignment="Center" VerticalAlignment="Center" Width="24" Height="24" Margin="-4" SnapsToDevicePixels="True" Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToImageConverter}, ConverterParameter='16,16'}"/>
                                    <Fluent:TwoLineLabel x:Name="controlLabel" Text="{TemplateBinding Header}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="2,0" HasTwoLines="False" HasGlyph="{TemplateBinding HasTriangle}"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup" Placement="Bottom" MinWidth="{TemplateBinding ActualWidth}" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Margin="0,0,-4,0" VerticalAlignment="Top" Grid.ColumnSpan="2">
                            <Grid Name="DropDown" IsEnabled="{TemplateBinding IsEnabled}" SnapsToDevicePixels="True" Margin="0" VerticalAlignment="Top">
                                <Border x:Name="PART_DropDownBorder" SnapsToDevicePixels="True" Background="{DynamicResource ContextMenuBackgroundBrush}" BorderBrush="{DynamicResource ContextMenuBorderBrush}" BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                    <!--d:LayoutOverrides="Width, Height"-->
                                    <Grid Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                        <Grid Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ScrollViewer x:Name="PART_ScrollViewer" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" ClipToBounds="True">
                                                <StackPanel x:Name="PART_MenuPanel" Orientation="Vertical" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="3"/>
                                            </ScrollViewer>
                                            <Border x:Name="resizeBorder" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="11" Background="Transparent" BorderBrush="Transparent" BorderThickness="0,1,0,0" Grid.Row="1" CornerRadius="0,0,1,1" Visibility="Collapsed">
                                                <Grid>
                                                    <Thumb x:Name="PART_ResizeVerticalThumb" HorizontalAlignment="Stretch" Margin="0,0,0,-90" Width="Auto" Height="10" VerticalAlignment="Top" Cursor="SizeNS" Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                                                    <Thumb x:Name="PART_ResizeBothThumb" HorizontalAlignment="Right" Margin="0,0,0,-90" Width="10" Height="10" VerticalAlignment="Top" Cursor="SizeNWSE" Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                        <!--Popup x:Name="PART_Popup"
							   Placement="Bottom"
							   IsOpen="{TemplateBinding IsDropDownOpen}"
							   AllowsTransparency="True"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
							   Margin="0,0,-4,0"
							   VerticalAlignment="Top"
							   Grid.ColumnSpan="2">
                            <Grid Name="DropDown"
								  SnapsToDevicePixels="True"
								  Margin="0"
								  VerticalAlignment="Top">
                                <Border x:Name="PART_DropDownBorder"
										MinWidth="{TemplateBinding ActualWidth}"
										SnapsToDevicePixels="True"
										Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
										BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
										BorderThickness="1"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Top">
                                    <Grid Width="Auto"
										  Height="Auto"
										  HorizontalAlignment="Stretch"
										  VerticalAlignment="Top">
                                        <Border VerticalAlignment="Top"
												Width="Auto"
												Height="Auto"
												BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
												BorderThickness="1" />
                                        <Grid Margin="1"
											  HorizontalAlignment="Stretch"
											  VerticalAlignment="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ScrollViewer x:Name="PART_ScrollViewer"
														  Style="{DynamicResource MenuScrollViewer}"
														  IsTabStop="False"
														  Margin="1"
														  MaxHeight="{TemplateBinding MaxDropDownHeight}"
														  SnapsToDevicePixels="True"
														  VerticalScrollBarVisibility="Auto"
														  HorizontalScrollBarVisibility="Hidden">
                                                <StackPanel Orientation="Vertical"
															IsItemsHost="True"
															KeyboardNavigation.DirectionalNavigation="Local" />
                                            </ScrollViewer>
                                            <Border x:Name="resizeBorder"
													HorizontalAlignment="Stretch"
													VerticalAlignment="Top"
													Height="11"
													BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}"
													BorderThickness="0,1,0,0"
													Grid.Row="1"
													Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgoundBrush}">
                                                <Grid>
                                                    <Thumb x:Name="PART_ResizeVerticalThumb"
														   HorizontalAlignment="Stretch"
														   Margin="0,0,0,-90"
														   Width="Auto"
														   Height="10"
														   VerticalAlignment="Top"
														   Cursor="SizeNS"
														   Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                                                    <Thumb x:Name="PART_ResizeBothThumb"
														   HorizontalAlignment="Right"
														   Margin="0,0,0,-90"
														   Width="10"
														   Height="10"
														   VerticalAlignment="Top"
														   Cursor="SizeNWSE"
														   Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode" Value="None">
                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="Both">
                            <Setter Property="Visibility" TargetName="PART_ResizeVerticalThumb" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_ResizeBothThumb" Value="Visible" />
                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="Vertical">
                            <Setter Property="Visibility" TargetName="PART_ResizeBothThumb" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_ResizeVerticalThumb" Value="Visible" />
                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Size" Value="Small">
                            <Setter Property="Visibility" TargetName="controlLabel" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Size" Value="Large">
                            <Setter Property="HasTwoLines" TargetName="controlLabel" Value="True" />
                            <Setter Property="Orientation" TargetName="stackPanel" Value="Vertical" />
                            <Setter Property="Visibility" TargetName="largeIconImage" Value="Visible" />
                            <Setter Property="Visibility" TargetName="iconImage" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="controlLabel" Value="2,0,0,0" />
                        </Trigger>
                        <!--Trigger Property="IsDropDownOpen"
								 Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                            <Setter Property="Background" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                        </Trigger-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsDropDownOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleX" To="0.9" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleY" To="0.9" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="iconImage" Storyboard.TargetProperty="Opacity" To="0.25" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="largeIconImage" Storyboard.TargetProperty="Opacity" To="0.25" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="controlLabel" Storyboard.TargetProperty="Opacity" To="0.25" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="iconImage" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="largeIconImage" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="controlLabel" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Effect" TargetName="iconImage">
                                <Setter.Value>
                                    <Fluent:GrayscaleEffect/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Effect" TargetName="largeIconImage">
                                <Setter.Value>
                                    <Fluent:GrayscaleEffect/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Size"
                     Value="Large">
                <Setter Property="Height"
                        Value="68" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Middle">
                <Setter Property="Height"
                        Value="22" />
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
            </Trigger>
            <Trigger Property="Size"
                     Value="Small">
                <Setter Property="Height"
                        Value="22" />
                <Setter Property="Width"
                        Value="32" />
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="{x:Type Fluent:SplitButton}" TargetType="{x:Type Fluent:SplitButton}">
        <Setter Property="Height" Value="68" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="2,1"/>
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="Fluent:KeyTip.AutoPlacement" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:SplitButton}">
                    <ControlTemplate.Resources>
                        <Style BasedOn="{StaticResource MenuSeparatorStyle}" TargetType="{x:Type Separator}" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="OuterHoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0" IsHitTestVisible="False"/>
                        <Border BorderThickness="1" Name="PART_ButtonBorder" BorderBrush="Transparent" Background="Transparent" VerticalAlignment="Stretch">
                            <DockPanel Name="stackPanel" KeyboardNavigation.TabNavigation="Local">
                                <Border BorderThickness="0,0,0,0" Name="downBorder" BorderBrush="Transparent" Background="Transparent" Margin="0,0,0,0" Height="32" DockPanel.Dock="Bottom">
                                    <Grid>
                                        <Border x:Name="LowerHoverBackground" BorderThickness="1" CornerRadius="0,0,3,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}" IsHitTestVisible="False" Opacity="0">
                                            <Border BorderThickness="0,1,0,2" CornerRadius="0,0,2,2" Background="#FF68A2CC" BorderBrush="#FF58BFEA" IsHitTestVisible="False"/>
                                        </Border>
                                        <Border x:Name="LowerSelectedBackground" BorderThickness="1" CornerRadius="0,0,3,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}" IsHitTestVisible="False" Opacity="0">
                                            <Border BorderThickness="0,1,0,2" CornerRadius="0,0,2,2" Background="{DynamicResource ToolbarToggleButtonSelectedBackground}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}" IsHitTestVisible="False"/>
                                        </Border>
                                        <Canvas x:Name="LowerSizingAid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="-1,0,-1,-1"/>
                                        <Fluent:TwoLineLabel x:Name="controlLabel" Text="{TemplateBinding Header}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" HasTwoLines="False"/>
                                        <!--Fluent:TwoLineLabel x:Name="controlLabel" Text="{TemplateBinding Header}" Style="{DynamicResource TwoLineLabelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,1,2,2" HasGlyph="{TemplateBinding HasTriangle}" Foreground="{TemplateBinding Foreground}" /-->
                                    </Grid>
                                </Border>
                                <Grid>
                                    <Border x:Name="HoverBackground" BorderThickness="1" CornerRadius="3,3,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}" IsHitTestVisible="False" Opacity="0">
                                        <Border BorderThickness="0,1,0,2" CornerRadius="2,2,0,0" Background="#FF68A2CC" BorderBrush="#FF58BFEA" IsHitTestVisible="False"/>
                                    </Border>
                                    <Border x:Name="SelectedBackground" BorderThickness="1" CornerRadius="3,3,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}" IsHitTestVisible="False" Opacity="0">
                                        <Border BorderThickness="0,1,0,2" CornerRadius="2,2,0,0" Background="{DynamicResource ToolbarToggleButtonSelectedBackground}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}" IsHitTestVisible="False"/>
                                    </Border>
                                    <Canvas x:Name="SizingAid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="-1,-1,-1,0"/>
                                    <Fluent:ToggleButton x:Name="PART_Button" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" CommandTarget="{TemplateBinding CommandTarget}" Margin="0,0,0,0" Height="Auto" Width="Auto" Style="{DynamicResource InnerButtonStyle}" IsEnabled="{TemplateBinding IsButtonEnabled}" Header="{TemplateBinding Header}" ToolTip="{TemplateBinding ToolTip}" GroupName="{Binding GroupName, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsDefinitive="{TemplateBinding IsDefinitive}" CanAddToQuickAccessToolBar="{TemplateBinding CanAddButtonToQuickAccessToolBar}" Foreground="{TemplateBinding Foreground}" />

                                    <ContentPresenter x:Name="largeIconImage" HorizontalAlignment="Center" VerticalAlignment="Center" Width="32" Height="32" Margin="0,2,0,0" SnapsToDevicePixels="True" Visibility="Collapsed" Content="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToImageConverter}, ConverterParameter='32,32'}"/>
                                    <ContentPresenter x:Name="iconImage" HorizontalAlignment="Center" VerticalAlignment="Center" Width="24" Height="24" Margin="-4" SnapsToDevicePixels="True" Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToImageConverter}, ConverterParameter='16,16'}"/>
                                </Grid>
                                <!--LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}}"
                                         Icon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}}"-->
                            </DockPanel>
                        </Border>
                        <Popup x:Name="PART_Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Margin="0,0,-4,0" VerticalAlignment="Top" Grid.ColumnSpan="2">
                            <Grid Name="DropDown" IsEnabled="{TemplateBinding IsEnabled}" SnapsToDevicePixels="True" Margin="0" VerticalAlignment="Top">
                                <Border x:Name="PART_DropDownBorder" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True" Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}" BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}" BorderThickness="1" CornerRadius="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                    <!--d:LayoutOverrides="Width, Height"-->
                                    <Grid Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                        <Border VerticalAlignment="Top" Width="Auto" Height="Auto" BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}" BorderThickness="1" />
                                        <Grid Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ScrollViewer x:Name="PART_ScrollViewer" Style="{DynamicResource MenuScrollViewer}" Margin="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
                                                <StackPanel x:Name="PART_MenuPanel" Orientation="Vertical" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                            </ScrollViewer>
                                            <Border x:Name="resizeBorder" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="11" BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}" BorderThickness="0,1,0,0" Grid.Row="1" CornerRadius="0,0,1,1" Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgoundBrush}">
                                                <Grid>
                                                    <Thumb x:Name="PART_ResizeVerticalThumb" HorizontalAlignment="Stretch" Margin="0,0,0,-90" Width="Auto" Height="10" VerticalAlignment="Top" Cursor="SizeNS" Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                                                    <Thumb x:Name="PART_ResizeBothThumb" HorizontalAlignment="Right" Margin="0,0,0,-90" Width="10" Height="10" VerticalAlignment="Top" Cursor="SizeNWSE" Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Size" Value="Small">
                            <Setter Property="Visibility" TargetName="controlLabel" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Size" Value="Large">
                            <Setter Property="HasTwoLines" TargetName="controlLabel" Value="True" />
                            <Setter Property="Visibility" TargetName="largeIconImage" Value="Visible" />
                            <Setter Property="Visibility" TargetName="iconImage" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="controlLabel" Value="2,0,0,0" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="None">
                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="Both">
                            <Setter Property="Visibility" TargetName="PART_ResizeVerticalThumb" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_ResizeBothThumb" Value="Visible" />
                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="Vertical">
                            <Setter Property="Visibility" TargetName="PART_ResizeBothThumb" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_ResizeVerticalThumb" Value="Visible" />
                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                            <Setter Property="Background" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                        </Trigger>
                        <Trigger Property="Size" Value="Small">
                            <Setter Property="Size" TargetName="PART_Button" Value="Small" />
                            <!--Setter Property="Orientation" TargetName="stackPanel" Value="Horizontal" /-->
                            <Setter TargetName="downBorder" Property="DockPanel.Dock" Value="Right"/>
                            <Setter Property="Width" TargetName="controlLabel" Value="10" />
                            <Setter Property="Margin" TargetName="controlLabel" Value="0,-19,0,0" />
                            <Setter Property="Text" TargetName="controlLabel" Value="" />
                            <Setter Property="Padding" TargetName="downBorder" Value="1,0,0,0" />
                        </Trigger>
                        <Trigger Property="Size" Value="Middle">
                            <Setter Property="Size" TargetName="PART_Button" Value="Middle" />
                            <Setter TargetName="downBorder" Property="DockPanel.Dock" Value="Right"/>
                            <!--Setter Property="Orientation" TargetName="stackPanel" Value="Horizontal" /-->
                            <Setter Property="Width" TargetName="controlLabel" Value="10" />
                            <Setter Property="Margin" TargetName="controlLabel" Value="0,-19,0,0" />
                            <Setter Property="Text" TargetName="controlLabel" Value="" />
                        </Trigger>
                        <Trigger Property="IsButtonEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_Button" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="controlLabel" Storyboard.TargetProperty="Opacity" To="0.25" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="controlLabel" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="IsEnabled" TargetName="PART_Button" Value="False" />
                            <!--Setter Property="Opacity" TargetName="controlLabel" Value="0.25" /-->
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LowerSelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LowerSelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                            <Setter Property="Background" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" /-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="PART_Button" />
                                <Condition Property="IsDropDownOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <!--Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" /-->
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0625" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="downBorder" />
                                <Condition Property="IsDropDownOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LowerHoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LowerHoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <!--Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                            <Setter Property="Background" TargetName="downBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                            <Setter Property="BorderBrush" TargetName="downBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" /-->
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="OuterHoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0625" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="OuterHoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Size" Value="Large">
                <Setter Property="Height" Value="68" />
                <Setter Property="Fluent:KeyTip.HorizontalAlignment" Value="Center" />
                <Setter Property="Fluent:KeyTip.VerticalAlignment" Value="Bottom" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter Property="Height" Value="22" />
                <Setter Property="Fluent:KeyTip.HorizontalAlignment" Value="Right" />
                <Setter Property="Fluent:KeyTip.VerticalAlignment" Value="Center" />
                <Setter Property="Fluent:KeyTip.Margin" Value="0,0,-5,0" />
            </Trigger>
            <Trigger Property="Size" Value="Small">
                <Setter Property="Height" Value="22" />
                <Setter Property="Width" Value="32" />
                <Setter Property="Fluent:KeyTip.HorizontalAlignment" Value="Right" />
                <Setter Property="Fluent:KeyTip.VerticalAlignment" Value="Center" />
                <Setter Property="Fluent:KeyTip.Margin" Value="0,0,-5,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style x:Key="{x:Type Fluent:SplitButton}" TargetType="{x:Type Fluent:SplitButton}">
        <Setter Property="Height" Value="68" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="2,1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Fluent:KeyTip.AutoPlacement" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:SplitButton}">
                    <ControlTemplate.Resources>
                        <Style BasedOn="{StaticResource MenuSeparatorStyle}"
                   TargetType="{x:Type Separator}" />
                    </ControlTemplate.Resources>
                    <Grid Background="#01000000">
                        <Grid>
                            <Border x:Name="PART_ButtonBorder" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0" IsHitTestVisible="False"/>
                            <DockPanel Name="stackPanel" KeyboardNavigation.TabNavigation="Local">
                                <Grid x:Name="TopSegment" DockPanel.Dock="Top" Margin="1,1,1,0">
                                    <Border x:Name="HoverBackground" BorderThickness="1" CornerRadius="3,3,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}" IsHitTestVisible="False" Opacity="0">
                                        <Border BorderThickness="0,1,0,2" CornerRadius="2,2,0,0" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}" IsHitTestVisible="False"/>
                                    </Border>
                                    <Border x:Name="SelectedBackground" BorderThickness="1" CornerRadius="3,3,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}" IsHitTestVisible="False" Opacity="0">
                                        <Border BorderThickness="0,1,0,2" CornerRadius="2,2,0,0" Background="{DynamicResource ToolbarToggleButtonSelectedBackground}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}" IsHitTestVisible="False"/>
                                    </Border>
                                    <Fluent:ToggleButton x:Name="PART_Button" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" CommandTarget="{TemplateBinding CommandTarget}" Margin="0,0,0,0" Height="Auto" Width="Auto" IsEnabled="{TemplateBinding IsButtonEnabled}" Header="{TemplateBinding Header}" ToolTip="{TemplateBinding ToolTip}" GroupName="{Binding GroupName, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsDefinitive="{TemplateBinding IsDefinitive}" CanAddToQuickAccessToolBar="{TemplateBinding CanAddButtonToQuickAccessToolBar}" Background="Red"/>
    </Grid>
    <Border BorderThickness="0" Name="downBorder" Background="#01000000" BorderBrush="Transparent" Margin="1,0,1,1" Height="50">
                                    <Grid>
                                        <Border x:Name="LowerHoverBackground" BorderThickness="1" CornerRadius="0,0,3,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}" IsHitTestVisible="False" Opacity="0">
                                            <Border BorderThickness="0,1,0,2" CornerRadius="0,0,2,2" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}" IsHitTestVisible="False"/>
                                        </Border>
                                        <Border x:Name="LowerSelectedBackground" BorderThickness="1" CornerRadius="0,0,3,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}" IsHitTestVisible="False" Opacity="0">
                                            <Border BorderThickness="0,1,0,2" CornerRadius="0,0,2,2" Background="{DynamicResource ToolbarToggleButtonSelectedBackground}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}" IsHitTestVisible="False"/>
                                        </Border>
                                        <Fluent:TwoLineLabel x:Name="controlLabel" Text="{TemplateBinding Header}" Style="{DynamicResource TwoLineLabelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,1,2,2" HasGlyph="{TemplateBinding HasTriangle}" />
                                    </Grid>
                                </Border>
                            </DockPanel>
                        </Grid>
                        <Popup x:Name="PART_Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Margin="0,0,-4,0" VerticalAlignment="Top" Grid.ColumnSpan="2">
                            <Grid Name="DropDown" IsEnabled="{TemplateBinding IsEnabled}" SnapsToDevicePixels="True" Margin="0" VerticalAlignment="Top">
                                <Border x:Name="PART_DropDownBorder" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True" Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}" BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}" BorderThickness="1" CornerRadius="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                    <Grid Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                        <Border VerticalAlignment="Top" Width="Auto" Height="Auto" BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}" BorderThickness="1" />
                                        <Grid Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ScrollViewer x:Name="PART_ScrollViewer" Style="{DynamicResource MenuScrollViewer}" Margin="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
                                                <StackPanel x:Name="PART_MenuPanel" Orientation="Vertical" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                            </ScrollViewer>
                                            <Border x:Name="resizeBorder" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="11" BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}" BorderThickness="0,1,0,0" Grid.Row="1" CornerRadius="0,0,1,1" Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgoundBrush}">
                                                <Grid>
                                                    <Thumb x:Name="PART_ResizeVerticalThumb" HorizontalAlignment="Stretch" Margin="0,0,0,-90" Width="Auto" Height="10" VerticalAlignment="Top" Cursor="SizeNS" Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                                                    <Thumb x:Name="PART_ResizeBothThumb" HorizontalAlignment="Right" Margin="0,0,0,-90" Width="10" Height="10" VerticalAlignment="Top" Cursor="SizeNWSE" Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode"
                     Value="None">
                            <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ResizeMode"
                     Value="Both">
                            <Setter Property="Visibility"
                        TargetName="PART_ResizeVerticalThumb"
                        Value="Collapsed" />
                            <Setter Property="Visibility"
                        TargetName="PART_ResizeBothThumb"
                        Value="Visible" />
                            <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Visible" />
                        </Trigger>
                        <Trigger Property="ResizeMode"
                     Value="Vertical">
                            <Setter Property="Visibility"
                        TargetName="PART_ResizeBothThumb"
                        Value="Collapsed" />
                            <Setter Property="Visibility"
                        TargetName="PART_ResizeVerticalThumb"
                        Value="Visible" />
                            <Setter Property="Visibility"
                        TargetName="resizeBorder"
                        Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                            <Setter Property="Background" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                        </Trigger>
                        <Trigger Property="Size" Value="Small">
                            <Setter Property="Size" TargetName="PART_Button" Value="Small" />
                            <Setter Property="Width" TargetName="controlLabel" Value="10" />
                            <Setter Property="Margin" TargetName="controlLabel" Value="0,-19,0,0" />
                            <Setter Property="Text" TargetName="controlLabel" Value="" />
                            <Setter Property="Padding" TargetName="downBorder" Value="1,0,0,0" />
                        </Trigger>
                        <Trigger Property="Size" Value="Middle">
                            <Setter Property="Size" TargetName="PART_Button" Value="Middle" />
                            <Setter Property="Width" TargetName="controlLabel" Value="10" />
                            <Setter Property="Margin" TargetName="controlLabel" Value="0,-19,0,0" />
                            <Setter Property="Text" TargetName="controlLabel" Value="" />
                        </Trigger>
                        <Trigger Property="IsButtonEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_Button" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_Button" Value="False" />
                            <Setter Property="Opacity" TargetName="controlLabel" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                            <Setter Property="Background" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="PART_Button" />
                                <Condition Property="IsDropDownOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0625" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger SourceName="controlLabel" Property="IsFocused" Value="True">
                            <Setter Property="IsDropDownOpen" Value="True"/>
                            <Setter TargetName="PART_Popup" Property="IsOpen" Value="True"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="downBorder" />
                                <Condition Property="IsDropDownOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LowerHoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LowerHoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_ButtonBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_ButtonBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Size" Value="Large">
                <Setter Property="Height" Value="68" />
                <Setter Property="Fluent:KeyTip.HorizontalAlignment" Value="Center" />
                <Setter Property="Fluent:KeyTip.VerticalAlignment" Value="Bottom" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter Property="Height" Value="22" />
                <Setter Property="Fluent:KeyTip.HorizontalAlignment" Value="Right" />
                <Setter Property="Fluent:KeyTip.VerticalAlignment" Value="Center" />
                <Setter Property="Fluent:KeyTip.Margin" Value="0,0,-5,0" />
            </Trigger>
            <Trigger Property="Size" Value="Small">
                <Setter Property="Height" Value="22" />
                <Setter Property="Width" Value="32" />
                <Setter Property="Fluent:KeyTip.HorizontalAlignment" Value="Right" />
                <Setter Property="Fluent:KeyTip.VerticalAlignment" Value="Center" />
                <Setter Property="Fluent:KeyTip.Margin" Value="0,0,-5,0" />
            </Trigger>
        </Style.Triggers>
    </Style-->

    <!--Style x:Key="{x:Type Fluent:Button}" TargetType="{x:Type Fluent:Button}" BasedOn="{StaticResource {x:Type Fluent:Button}}"/-->

    <Style x:Key="PlexRibbonBackstageButtonStyle" TargetType="{x:Type Fluent:Button}">
        <Setter Property="Height" Value="26" />
        <Setter Property="Margin" Value="6,1"/>
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Foreground" Value="{DynamicResource PlexDarkRibbonForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:Button}">
                    <Grid>
                        <Border x:Name="HoverBackground" BorderBrush="#FF527DE0" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0" CornerRadius="2">
                            <Border Background="#7FC2DFF9" BorderBrush="#FFF0F5FC" BorderThickness="1" CornerRadius="2"/>
                        </Border>
                        <StackPanel x:Name="stackPanel" Width="Auto" Margin="{TemplateBinding Padding}" Orientation="Horizontal" VerticalAlignment="Center">
                            <ContentPresenter x:Name="iconImage" HorizontalAlignment="Left" Width="16" Height="16" VerticalAlignment="Center" Content="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToImageConverter}, ConverterParameter='16,16'}" Margin="5,0" SnapsToDevicePixels="True"/>
                            <Fluent:TwoLineLabel x:Name="controlLabel" Text="{TemplateBinding Header}" HorizontalAlignment="Stretch" VerticalAlignment="Center" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Margin="2,0" Foreground="Black" HasTwoLines="False"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="iconImage" Value="0.5" />
                            <Setter Property="Opacity" TargetName="controlLabel" Value="0.5" />
                            <Setter Property="Effect" TargetName="iconImage">
                                <Setter.Value>
                                    <Fluent:GrayscaleEffect />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexRibbonTabFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="1" CornerRadius="2" SnapsToDevicePixels="true" BorderBrush="{DynamicResource FocusVisualBorderBrush}"
                            Background="Transparent" Margin="101,1">
                        <Border BorderThickness="2" CornerRadius="2" SnapsToDevicePixels="True" Background="Transparent" BorderBrush="{DynamicResource FocusVisualLinearGradientBrush}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexRibbonSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Width" Value="1"/>
        <Setter Property="Margin" Value="4,0,4,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" Stroke="Transparent" StrokeThickness="0">
                        <Rectangle.OpacityMask>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="Transparent"/>
                                    <GradientStop Offset="0.5" Color="White"/>
                                    <GradientStop Offset="1" Color="Transparent"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Fluent:QuickAccessToolBar}" TargetType="{x:Type Fluent:QuickAccessToolBar}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:QuickAccessToolBar}">
                    <DockPanel x:Name="PART_RootPanel" KeyboardNavigation.TabNavigation="Local">
                        <ContentControl x:Name="menuContentControl" DockPanel.Dock="Right" HorizontalAlignment="Right" Focusable="False">
                            <Fluent:DropDownButton CanAddToQuickAccessToolBar="False" x:Name="PART_MenuDownButton" Width="13" HorizontalAlignment="Right" VerticalAlignment="Stretch" Height="22" DockPanel.Dock="Right" IsEnabled="{TemplateBinding IsEnabled}" Visibility="{Binding IsMenuDropDownVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" Size="Small" ToolTip="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.QuickAccessToolBarDropDownButtonTooltip, Mode=OneWay}" KeyboardNavigation.TabIndex="3">
                                <Fluent:DropDownButton.Style>
                                    <Style TargetType="{x:Type Fluent:DropDownButton}">
                                        <Setter Property="VerticalAlignment" Value="Stretch" />
                                        <Setter Property="Width" Value="13" />
                                        <Setter Property="Foreground" Value="{DynamicResource CaptionButtonActiveIdleBrush}" />
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="UseLayoutRounding" Value="True" />
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect Color="White" Direction="90" ShadowDepth="0" BlurRadius="10" Opacity="1"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Icon">
                                            <Setter.Value>
                                                <StackPanel Orientation="Vertical" Width="7" VerticalAlignment="Center">
                                                    <Rectangle HorizontalAlignment="Stretch" Height="1" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Fluent:DropDownButton}}}" Stroke="Transparent" StrokeThickness="0" Margin="0,0,0,2"/>
                                                    <Path Data="M 0 0 L 2 2 L 4 0 Z" HorizontalAlignment="Center" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Fluent:DropDownButton}}}" Stroke="Transparent" StrokeThickness="0">
                                                        <Path.Effect>
                                                            <DropShadowEffect Color="White" Direction="90" ShadowDepth="0" BlurRadius="10" Opacity="1"/>
                                                        </Path.Effect>
                                                    </Path>
                                                </StackPanel>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Fluent:DropDownButton}">
                                                    <Grid Margin="0,3,0,0">
                                                        <Border x:Name="PART_ButtonBorder" BorderThickness="1" Background="Transparent" BorderBrush="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="13">
                                                            <!--Image x:Name="iconImage" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:ObjectToImageConverter}, ConverterParameter='8,8'}" Width="8" Margin="-3,0,2,0" /-->
                                                            <!--Grid>
                                                                <Control Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                    <Control.OpacityMask>
                                                                        <VisualBrush>
                                                                            <VisualBrush.Visual>
                                                                                <ContentControl Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" />
                                                                            </VisualBrush.Visual>
                                                                        </VisualBrush>
                                                                    </Control.OpacityMask>
                                                                    <Control.Effect>
                                                                        <BlurEffect KernelType="Gaussian" Radius="10"/>
                                                                    </Control.Effect>
                                                                </Control-->
                                                            <ContentControl Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" />
                                                            <!--/Grid-->
                                                        </Border>
                                                        <Popup x:Name="PART_Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Margin="0,0,-4,0" VerticalAlignment="Top" Grid.ColumnSpan="2">
                                                            <Grid Name="DropDown" SnapsToDevicePixels="True" Margin="0" VerticalAlignment="Top">
                                                                <Border x:Name="PART_DropDownBorder" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True" Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}" BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                                                    <Grid Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                                                        <Border VerticalAlignment="Top" Width="Auto" Height="Auto" BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}" BorderThickness="1" />
                                                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="*" />
                                                                                <RowDefinition Height="Auto" />
                                                                            </Grid.RowDefinitions>
                                                                            <ScrollViewer Margin="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                                                                                <StackPanel x:Name="PART_MenuPanel" Orientation="Vertical" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                                            </ScrollViewer>
                                                                            <Border x:Name="resizeBorder" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="11" BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}" BorderThickness="0,1,0,0" Grid.Row="1" Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgoundBrush}">
                                                                                <Grid>
                                                                                    <Thumb x:Name="PART_ResizeVerticalThumb" HorizontalAlignment="Stretch" Margin="0,0,0,-90" Width="Auto" Height="10" VerticalAlignment="Top" Cursor="SizeNS" Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                                                                                    <Thumb x:Name="PART_ResizeBothThumb" HorizontalAlignment="Right" Margin="0,0,0,-90" Width="10" Height="10" VerticalAlignment="Top" Cursor="SizeNWSE" Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                                                                                </Grid>
                                                                            </Border>
                                                                        </Grid>
                                                                    </Grid>
                                                                </Border>
                                                            </Grid>
                                                        </Popup>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="ResizeMode" Value="None">
                                                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Collapsed" />
                                                        </Trigger>
                                                        <Trigger Property="ResizeMode" Value="Both">
                                                            <Setter Property="Visibility" TargetName="PART_ResizeVerticalThumb" Value="Collapsed" />
                                                            <Setter Property="Visibility" TargetName="PART_ResizeBothThumb" Value="Visible" />
                                                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Visible" />
                                                        </Trigger>
                                                        <Trigger Property="ResizeMode" Value="Vertical">
                                                            <Setter Property="Visibility" TargetName="PART_ResizeBothThumb" Value="Collapsed" />
                                                            <Setter Property="Visibility" TargetName="PART_ResizeVerticalThumb" Value="Visible" />
                                                            <Setter Property="Visibility" TargetName="resizeBorder" Value="Visible" />
                                                        </Trigger>
                                                        <Trigger Property="Size" Value="Middle">
                                                            <Setter Property="VerticalAlignment" TargetName="PART_ButtonBorder" Value="Stretch" />
                                                        </Trigger>
                                                        <Trigger Property="IsDropDownOpen" Value="True">
                                                            <!--Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                                                            <Setter Property="Background" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" /-->
                                                            <Setter Property="Foreground" Value="{DynamicResource CaptionButtonActivePressedBrush}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True" />
                                                                <Condition Property="IsDropDownOpen" Value="False" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Foreground" Value="{DynamicResource CaptionButtonActiveHoverBrush}"/>
                                                            <!--Setter Property="Background" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                                                            <Setter Property="BorderBrush" TargetName="PART_ButtonBorder" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" /-->
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Fluent:DropDownButton.Style>
                                <!--Icon="pack://application:,,,/Fluent;Component/Themes/Images/QuickAccessToolBarDropDown.png"-->
                                <Fluent:GroupSeparatorMenuItem Style="{DynamicResource MenuGroupSeparatorStyle}" Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.QuickAccessToolBarMenuHeader, Mode=OneWay}" />
                                <StackPanel x:Name="PART_MenuPanel" />
                                <Separator x:Name="menuSeparator" Style="{DynamicResource MenuSeparatorStyle}" />
                                <Fluent:MenuItem x:Name="PART_ShowBelow" CanAddToQuickAccessToolBar="False" Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.QuickAccessToolBarMenuShowBelow, Mode=OneWay}" />
                                <Fluent:MenuItem x:Name="PART_ShowAbove" CanAddToQuickAccessToolBar="False" Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.QuickAccessToolBarMenuShowAbove, Mode=OneWay}" Visibility="Collapsed" />
                            </Fluent:DropDownButton>
                        </ContentControl>
                        <Fluent:DropDownButton x:Name="PART_ToolbarDownButton" HorizontalAlignment="Right" Width="13" Visibility="Collapsed" VerticalAlignment="Stretch" Style="{DynamicResource ToolbarDropDownButtonStyle}" Height="22" DockPanel.Dock="Right" Fluent:KeyTip.Keys="00" Size="Small" IsEnabled="{TemplateBinding IsEnabled}" Icon="pack://application:,,,/Fluent;Component/Themes/Images/QuickAccessToolBarExtender.png" ToolTip="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.QuickAccessToolBarMoreControlsButtonTooltip, Mode=OneWay}" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <Fluent:DropDownButton.ContextMenu>
                                <ContextMenu/>
                            </Fluent:DropDownButton.ContextMenu>

                            <StackPanel Orientation="Horizontal" Background="{TemplateBinding Background}" Width="Auto" Height="26" Margin="-1">
                                <StackPanel Orientation="Horizontal" x:Name="PART_ToolBarOverflowPanel" HorizontalAlignment="Left" Width="Auto" Height="Auto" VerticalAlignment="Center" Margin="1,0,0,0" />
                                <Label x:Name="popupContentControl" VerticalAlignment="Center" HorizontalAlignment="Left" Width="13" Background="{x:Null}" Height="22" Focusable="False" Padding="0" Margin="1,0" />
                            </StackPanel>
                        </Fluent:DropDownButton>
                        <StackPanel x:Name="PART_ToolBarPanel" Orientation="Horizontal" Width="Auto" Height="Auto" VerticalAlignment="Stretch" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="1"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CanQuickAccessLocationChanging" Value="False">
                            <Setter Property="Visibility" TargetName="PART_ShowBelow" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_ShowAbove" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="menuSeparator" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ShowAboveRibbon" Value="False">
                            <Setter Property="Visibility" TargetName="PART_ShowBelow" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_ShowAbove" Value="Visible" />
                        </Trigger>
                        <Trigger Property="HasOverflowItems" Value="True">
                            <Setter Property="Visibility" TargetName="PART_ToolbarDownButton" Value="Visible" />
                            <Setter Property="Content" TargetName="popupContentControl" Value="{Binding ElementName=PART_MenuDownButton, Mode=OneWay}" />
                            <Setter Property="Content" TargetName="menuContentControl" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Fluent:RibbonTitleBar}"
           TargetType="{x:Type Fluent:RibbonTitleBar}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="19,0,0,0"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:RibbonTitleBar}">
                    <Grid>
                        <ContentPresenter x:Name="PART_QuickAccessToolbarHolder" ContentSource="QuickAccessToolBar" />
                        <ContentPresenter x:Name="PART_HeaderHolder" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" IsHitTestVisible="False" />
                        <Fluent:RibbonContextualGroupsContainer x:Name="PART_ItemsContainer" IsItemsHost="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsCollapsed" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_QuickAccessToolbarHolder" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ItemsContainer" />
                        </Trigger>
                        <Trigger Property="HideContextTabs" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ItemsContainer" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_QuickAccessToolbarHolder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Fluent:Ribbon}" TargetType="{x:Type Fluent:Ribbon}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0,-24,0,0"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Fluent:FrameworkHelper.UseLayoutRounding" Value="True" />
        <!--Setter Property="IsManipulationEnabled" Value="True"/-->
        <Setter Property="QuickAccessToolBarHeight" Value="{Binding TitleBarHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type apictrl:DecoratableWindow}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:Ribbon}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Type Separator}" BasedOn="{StaticResource PlexRibbonSeparatorStyle}" TargetType="{x:Type Separator}"/>
                        <!--Style BasedOn="{StaticResource FluentRibbonDefaultContextMenuStyle}" TargetType="{x:Type ContextMenu}" /-->
                    </ControlTemplate.Resources>
                    <Grid>
                        
                        <Border Background="Transparent" BorderThickness="0" BorderBrush="Transparent">
                            <Grid x:Name="PART_LayoutRoot" Width="Auto" Height="Auto">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Fluent:RibbonTabControl x:Name="PART_RibbonTabControl"
                                         Menu="{TemplateBinding Menu}"
                                         ContentHeight="{TemplateBinding ContentHeight}"
                                         ContextMenu="{Binding ContextMenu, ElementName=PART_LayoutRoot}"
                                         IsMouseWheelScrollingEnabled="{TemplateBinding IsMouseWheelScrollingEnabled}" ClipToBounds="False" />
                                <ContentControl x:Name="quickAccessToolBarHolder"
                            Grid.Row="1"
                            HorizontalAlignment="Left" Height="{TemplateBinding QuickAccessToolBarHeight}">
                                    <Fluent:QuickAccessToolBar x:Name="PART_QuickAccessToolBar" ShowAboveRibbon="{Binding ShowQuickAccessToolBarAboveRibbon, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsMenuDropDownVisible="{TemplateBinding IsQuickAccessToolBarMenuDropDownVisible}" HorizontalAlignment="Left" Focusable="False" />
                                </ContentControl>
                            </Grid>
                        </Border>
                        <Border x:Name="SeparatorBorder" Background="Transparent" BorderBrush="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderThickness="0,0,0,1" CornerRadius="0" Height="10" VerticalAlignment="Bottom" IsHitTestVisible="False">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="Transparent"/>
                                        <GradientStop Offset="0.5" Color="White"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsQuickAccessToolBarVisible"
                     Value="False">
                            <Setter Property="Visibility"
                        TargetName="quickAccessToolBarHolder"
                        Value="Collapsed" />
                            <Setter Property="Visibility"
                        TargetName="PART_QuickAccessToolBar"
                        Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsCollapsed" Value="True">
                            <Setter Property="Visibility"
                        TargetName="PART_RibbonTabControl"
                        Value="Collapsed" />
                            <Setter Property="Visibility"
                        TargetName="quickAccessToolBarHolder"
                        Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ShowQuickAccessToolBarAboveRibbon" Value="True">
                            <Setter Property="Content"
                        TargetName="quickAccessToolBarHolder"
                        Value="{x:Null}" />
                            <Setter Property="Visibility"
                        TargetName="quickAccessToolBarHolder"
                        Value="Collapsed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding ActualWidth, Converter={StaticResource DoubleComparisonConverter}, ConverterParameter=&lt;325}" Value="True">
                            <Setter TargetName="PART_RibbonTabControl" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="SeparatorBorder" Property="Visibility" Value="Collapsed"/>
                            <!--Setter Property="Height" Value="0"/-->
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Fluent:RibbonTabControl}" TargetType="{x:Type Fluent:RibbonTabControl}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:RibbonTabControl}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type ScrollViewer}">
                            <Setter Property="CanContentScroll" Value="True" />
                            <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
                            <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
                            <Setter Property="PanningMode" Value="HorizontalOnly" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" IsHitTestVisible="True">
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Width="{TemplateBinding ActualWidth}" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" IsHitTestVisible="True" ClipToBounds="False" />
                                            <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="false" HorizontalAlignment="Left" Width="13" Height="Auto" VerticalAlignment="Stretch" Style="{DynamicResource ScrollButtonStyle}">
                                                <RepeatButton.Visibility>
                                                    <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedHorizontalScrollBarVisibility" />
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="HorizontalOffset" />
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentWidth" />
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportWidth" />
                                                    </MultiBinding>
                                                </RepeatButton.Visibility>
                                                <Path Fill="{DynamicResource BlackBrush}" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="0" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="3" Height="5" Data="M0,0L1,1 1,-1z" />
                                            </RepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.LineRightCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="false" HorizontalAlignment="Right" Width="13" Height="Auto" VerticalAlignment="Stretch" Style="{DynamicResource ScrollButtonStyle}">
                                                <RepeatButton.Visibility>
                                                    <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedHorizontalScrollBarVisibility" />
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="HorizontalOffset" />
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentWidth" />
                                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportWidth" />
                                                    </MultiBinding>
                                                </RepeatButton.Visibility>
                                                <Path Fill="{DynamicResource BlackBrush}" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="0" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="3" Height="5" Data="M1,0L0,1 0,-1z" />
                                            </RepeatButton>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="{x:Type Separator}" BasedOn="{StaticResource PlexRibbonSeparatorStyle}" TargetType="{x:Type Separator}"/>
                    </ControlTemplate.Resources>
                    <Grid x:Name="ContentGrid" Background="{TemplateBinding Background}" KeyboardNavigation.TabNavigation="Local" Height="Auto" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <!--RowDefinition x:Name="rowDefinition" MinHeight="{TemplateBinding ContentHeight}" MaxHeight="{TemplateBinding ContentHeight}" />
                            <RowDefinition x:Name="rowDefinition1" MinHeight="{TemplateBinding ContentGapHeight}" MaxHeight="{TemplateBinding ContentGapHeight}" /-->
                            <RowDefinition x:Name="rowDefinition" MinHeight="0" MaxHeight="{TemplateBinding ContentHeight}" />
                            <RowDefinition x:Name="rowDefinition1" MinHeight="0" MaxHeight="{TemplateBinding ContentGapHeight}" />
                        </Grid.RowDefinitions>
                        <Border x:Name="border" HorizontalAlignment="Stretch" Margin="0,-1,0,0" Width="Auto" BorderThickness="0" Grid.Row="1" BorderBrush="Transparent" />
                        <Border x:Name="mainContentControlBorder" Height="94" HorizontalAlignment="Stretch" Margin="1,0,1,0" Grid.Row="1" Grid.RowSpan="1" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" TextElement.Foreground="Black" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                            <Grid>
                                <Grid UseLayoutRounding="True" SnapsToDevicePixels="True">
                                    <Grid.Effect>
                                        <DropShadowEffect Color="Black" Direction="90" ShadowDepth="0" BlurRadius="3" Opacity="0.5"/>
                                    </Grid.Effect>
                                    <Border BorderThickness="1,1,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,2">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FFF5FAFF"/>
                                                    <GradientStop Offset="0.5" Color="#FFE6F0FA"/>
                                                    <GradientStop Offset="0.5" Color="#FFDCE6F4"/>
                                                    <GradientStop Offset="1" Color="#FFDDE9F7"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FFFDFEFF"/>
                                                    <GradientStop Offset="0.5" Color="#FFF3F8FD"/>
                                                    <GradientStop Offset="0.5" Color="#FFEEF3FA"/>
                                                    <GradientStop Offset="1" Color="#FFE4EFFB"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                    <Canvas Height="1" VerticalAlignment="Bottom" Background="#FFCDDAEA" Margin="0,1"/>
                                    <Canvas Height="1" VerticalAlignment="Bottom" Background="#FFA0AFC3" Margin="0"/>
                                </Grid>
                                <ContentControl x:Name="mainContentControl" Margin="0" Focusable="False">
                                    <ContentPresenter ContentSource="SelectedContent" x:Name="PART_SelectedContentPresenter" HorizontalAlignment="Stretch" Margin="0" />
                                </ContentControl>
                            </Grid>
                        </Border>
                        <Border Margin="0" VerticalAlignment="Stretch" Grid.Row="2" Background="{Binding Path=SelectedItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Grid x:Name="TabsGrid" Background="Transparent" TextElement.Foreground="Black" HorizontalAlignment="Stretch" Width="Auto" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Fluent:WindowSteeringHelperControl Grid.ColumnSpan="4" />
                            <ContentPresenter Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ContentSource="Menu" />
                            <Fluent:RibbonScrollViewer Grid.Column="1"  HorizontalAlignment="Stretch" Margin="0,0,0,-1" Width="Auto" Style="{DynamicResource RibbonTabScrollViewer}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" IsHitTestVisible="True" IsTabStop="False">
                                <!--Visibility="{Binding AreTabHeadersVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"-->
                                <Fluent:RibbonTabsContainer x:Name="PART_TabsContainer" IsItemsHost="True" Height="Auto" HorizontalAlignment="Stretch" Margin="0" KeyboardNavigation.TabIndex="1" />
                            </Fluent:RibbonScrollViewer>
                            <StackPanel HorizontalAlignment="Right" Grid.Column="3" Orientation="Horizontal" Margin="0,0,0,-1">
                                <Grid>
                                    <Image x:Name="image" Width="22" Height="22" Stretch="None" Visibility="Collapsed" />
                                    <!--Source="/Fluent;Component/Themes/Images/RibbonPin.png"-->
                                    <Fluent:ToggleButton x:Name="PART_MinimizeButton" Margin="0" Width="22" VerticalAlignment="Stretch" Size="Small" IsChecked="{Binding Path=IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding CanMinimize, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <Fluent:ToggleButton.Style>
                                            <Style TargetType="{x:Type Fluent:ToggleButton}">
                                                <Setter Property="Width" Value="22" />
                                                <Setter Property="Foreground" Value="Black" />
                                                <Setter Property="CanAddToQuickAccessToolBar" Value="False" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Fluent:ToggleButton}">
                                                            <Grid Background="#01000000">
                                                                <Border x:Name="HoverBackground" CornerRadius="2" BorderBrush="#FF94AECE" BorderThickness="1" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                                                    <Border.RenderTransform>
                                                                        <ScaleTransform x:Name="Size" ScaleX="1" ScaleY="1"/>
                                                                    </Border.RenderTransform>
                                                                    <Border.Effect>
                                                                        <DropShadowEffect Color="Black" Direction="270" BlurRadius="5" ShadowDepth="3" Opacity="0.125"/>
                                                                    </Border.Effect>
                                                                    <Border.Background>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                            <LinearGradientBrush.GradientStops>
                                                                                <GradientStop Offset="0" Color="#FFD6E7F9"/>
                                                                                <GradientStop Offset="0.5" Color="#FFB2CCE8"/>
                                                                                <GradientStop Offset="1" Color="#FFD6E7F9"/>
                                                                            </LinearGradientBrush.GradientStops>
                                                                        </LinearGradientBrush>
                                                                    </Border.Background>
                                                                    <Border CornerRadius="1" BorderBrush="#FFF8FCFF" BorderThickness="1">
                                                                        <Border.Background>
                                                                            <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1" RadiusX="1">
                                                                                <RadialGradientBrush.GradientStops>
                                                                                    <GradientStop Offset="0" Color="#FFFFFFFF"/>
                                                                                    <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                                                                </RadialGradientBrush.GradientStops>
                                                                            </RadialGradientBrush>
                                                                        </Border.Background>
                                                                    </Border>
                                                                </Border>
                                                                <!--Grid UseLayoutRounding="True" Effect="{DynamicResource CaptionButtonGlyphOutlineEffect}"-->
                                                                    <Path x:Name="iconImage" Stroke="#FF535666" StrokeThickness="2" Data="M 0 5 L 4 0 L 8 5" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" RenderTransformOrigin="0.5,0.5">
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform x:Name="Rotator" Angle="0"/>
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                                    <!--Path x:Name="iconImageChecked" Stroke="#FF535666" StrokeThickness="2" Data="M 0 0 L 4 5 L 8 0" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" Visibility="Collapsed"/>
                                                                </Grid-->
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetName="Rotator" Storyboard.TargetProperty="Angle" To="-180" Duration="0:0:0.25">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <QuinticEase EasingMode="EaseOut"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetName="Rotator" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.25" >
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <QuinticEase EasingMode="EaseOut"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                    <!--Setter Property="Visibility" TargetName="iconImage" Value="Collapsed" />
                                                                    <Setter Property="Visibility" TargetName="iconImageChecked" Value="Visible" /-->
                                                                    <!--Setter Property="Title" TargetName="screenTip" Value="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.ExpandButtonScreenTipTitle , Mode=OneWay}" />
                                                                    <Setter Property="Text" TargetName="screenTip" Value="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.ExpandButtonScreenTipText , Mode=OneWay}" /-->
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleX" To="0.9" Duration="0:0:0.125">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                                <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleY" To="0.9" Duration="0:0:0.125">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.125">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                                <DoubleAnimation Storyboard.TargetName="Size" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.125">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <QuinticEase EasingMode="EaseInOut"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Fluent:ToggleButton.Style>
                                    </Fluent:ToggleButton>
                                </Grid>
                                <StackPanel x:Name="PART_ToolbarPanel" Visibility="{Binding IsQuickAccessToolBarVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Fluent:Ribbon}}, Converter={StaticResource BoolToVisibilityConverter}}" Orientation="Horizontal" />
                            </StackPanel>
                        </Grid>
                        <Border x:Name="BottomSeparator" Background="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderBrush="Transparent" BorderThickness="0" Height="1" VerticalAlignment="Bottom" Margin="0" IsHitTestVisible="False" Grid.Row="0">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="Transparent"/>
                                        <GradientStop Offset="0.5" Color="White"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <Popup x:Name="PART_Popup" PlacementTarget="{Binding Path=SelectedTabItem, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Placement="Custom" StaysOpen="True" AllowsTransparency="True" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{TemplateBinding IsDropDownOpen}" HorizontalOffset="0" VerticalOffset="-10">
                            <Grid>
                                <Grid Margin="0,19,0,22">
                                    <Grid.Effect>
                                        <DropShadowEffect Color="Black" Direction="90" ShadowDepth="0" BlurRadius="3" Opacity="0.5"/>
                                    </Grid.Effect>
                                    <Border BorderThickness="1,1,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,2">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FFF5FAFF"/>
                                                    <GradientStop Offset="0.5" Color="#FFE6F0FA"/>
                                                    <GradientStop Offset="0.5" Color="#FFDCE6F4"/>
                                                    <GradientStop Offset="1" Color="#FFDDE9F7"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FFFDFEFF"/>
                                                    <GradientStop Offset="0.5" Color="#FFF3F8FD"/>
                                                    <GradientStop Offset="0.5" Color="#FFEEF3FA"/>
                                                    <GradientStop Offset="1" Color="#FFE4EFFB"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                    <Canvas Height="1" VerticalAlignment="Bottom" Background="#FFCDDAEA" Margin="0,1"/>
                                    <Canvas Height="1" VerticalAlignment="Bottom" Background="#FFA0AFC3" Margin="0"/>
                                </Grid>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition MinHeight="20"
                                       MaxHeight="20" />
                                        <RowDefinition MinHeight="{TemplateBinding ContentHeight}" MaxHeight="{TemplateBinding ContentHeight}" />
                                        <RowDefinition MinHeight="{TemplateBinding ContentGapHeight}" MaxHeight="{TemplateBinding ContentGapHeight}" />
                                        <RowDefinition Height="20" />
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="1"  Grid.RowSpan="2" BorderThickness="0" Margin="1,0" BorderBrush="Transparent" Background="Transparent" TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Foreground}" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained">
                                        <ContentControl x:Name="popupContentControl" Focusable="False" Margin="0" />
                                    </Border>
                                </Grid>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMinimized" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="mainContentControlBorder" Storyboard.TargetProperty="Height" To="0" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="BottomSeparator" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25"/>
                                        <!--ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RibbonTabControl.IsManipulationEnabled">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="mainContentControlBorder" Storyboard.TargetProperty="Height" To="94" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="BottomSeparator" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25"/>
                                        <!--ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RibbonTabControl.IsManipulationEnabled">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="True"/>
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--Setter Property="MinHeight" TargetName="rowDefinition" Value="0" />
                            <Setter Property="MinHeight" TargetName="rowDefinition1" Value="0" /-->
                            <!--Setter TargetName="mainContentControlBorder" Property="Height" Value="0"/-->
                            <Setter Property="Content" TargetName="popupContentControl" Value="{Binding ElementName=PART_SelectedContentPresenter, Mode=OneWay}" />
                            <Setter Property="Visibility" TargetName="image" Value="Collapsed" />
                        </Trigger>
                        <!--/Trigger-->
                        <Trigger SourceName="mainContentControlBorder" Property="Height" Value="0">
                            <Setter TargetName="mainContentControl" Property="Content" Value="{x:Null}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDropDownOpen" Value="True" />
                                <Condition Property="IsMinimized" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="image" Value="Visible" />
                            <Setter Property="Opacity" TargetName="PART_MinimizeButton" Value="0" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_TabsContainer" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="mainContentControlBorder" Property="Visibility" Value="Collapsed"/>
                            <!--Setter TargetName="BottomSeparator" Property="Visibility" Value="Collapsed"/-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Fluent:RibbonTabItem}" TargetType="{x:Type Fluent:RibbonTabItem}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexRibbonTabFocusVisualStyle}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="1,2,1,0" />
        <Setter Property="IsMinimized" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsMinimized, Mode=OneWay, FallbackValue=False}" />
        <Setter Property="IsOpen" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsDropDownOpen, Mode=OneWay, FallbackValue=True}" />
        <Setter Property="Indent" Value="6" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="ActiveTabBackground" Value="Transparent" />
        <Setter Property="ActiveTabBorderBrush" Value="Transparent" />
        <Setter Property="Fluent:RibbonProperties.MouseOverBackground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.MouseOver.Background}" />
        <Setter Property="Fluent:RibbonProperties.AppTheme" Value="{DynamicResource Fluent.Ribbon.AppTheme}" />
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:RibbonTabItem}">
                    <ControlTemplate.Resources>
                        <!--Style x:Key="{x:Type Fluent:Button}" BasedOn="{StaticResource PlexRibbonButtonStyle}" TargetType="{x:Type Fluent:Button}"/-->
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Height="Auto" Margin="2,0" ClipToBounds="False">
                        <Grid.Effect>
                            <DropShadowEffect x:Name="BaseShadowEffect" Color="Black" Direction="90" ShadowDepth="0" BlurRadius="3" Opacity="0"/>
                        </Grid.Effect>
                        <Border x:Name="HoverBackground" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" IsHitTestVisible="False" Margin="0,0,0,1" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#FFEDF2F7"/>
                                        <GradientStop Offset="1" Color="#FFE3EAF2"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#FF71A8E2"/>
                                        <GradientStop Offset="1" Color="#FF89AED3"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="selectedBorder" Background="#FFF5FAFF" BorderBrush="#FFFDFEFF" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" IsHitTestVisible="False" Opacity="0"/>
                        <Border x:Name="groupBorder" Margin="0,0,0,1" BorderThickness="0" Background="{Binding Group.Background, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Transparent}" OpacityMask="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Contextual.Background.OpacityMask}" />
                        <Border x:Name="PART_ContentContainer" HorizontalAlignment="Stretch" Margin="1" VerticalAlignment="Stretch" Padding="15,0,0,0" BorderThickness="0" BorderBrush="Transparent">
                            <Border.Effect>
                                <DropShadowEffect x:Name="GlowShadowEffect" Color="White" Direction="90" ShadowDepth="0" BlurRadius="10" Opacity="1"/>
                            </Border.Effect>
                            <Grid>
                                <ContentControl x:Name="ContentGlow" AutomationProperties.Name="{TemplateBinding Header}" AutomationProperties.AutomationId="{TemplateBinding Name}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto" Foreground="White" Visibility="Visible">
                                    <ContentControl.Effect>
                                        <BlurEffect KernelType="Gaussian" Radius="10"/>
                                    </ContentControl.Effect>
                                </ContentControl>
                                <ContentControl AutomationProperties.Name="{TemplateBinding Header}" AutomationProperties.AutomationId="{TemplateBinding Name}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="5,2" HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto" />
                            </Grid>
                        </Border>
                        <Grid x:Name="separatorGrid" Margin="0" Visibility="Collapsed" HorizontalAlignment="Right" Width="1">
                            <Separator Style="{DynamicResource PlexRibbonSeparatorStyle}" HorizontalAlignment="Right" Width="1"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="PART_ContentContainer" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="GlowShadowEffect" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                        <DoubleAnimation Storyboard.TargetName="ContentGlow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="GlowShadowEffect" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="ContentGlow" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="IsMinimized" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="GlowShadowEffect" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                        <DoubleAnimation Storyboard.TargetName="ContentGlow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="GlowShadowEffect" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="ContentGlow" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="IsMinimized" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BaseShadowEffect" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BaseShadowEffect" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter Property="Foreground" Value="Black" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasRightGroupBorder" Value="False" />
                                <Condition Property="HasLeftGroupBorder" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="groupBorder" Value="2,0,0,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasLeftGroupBorder" Value="False" />
                                <Condition Property="HasRightGroupBorder" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="groupBorder" Value="0,0,2,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasLeftGroupBorder" Value="False" />
                                <Condition Property="HasRightGroupBorder" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="groupBorder" Value="0,0,0,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasLeftGroupBorder" Value="True" />
                                <Condition Property="HasRightGroupBorder" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="groupBorder" Value="2,0,2,0" />
                        </MultiTrigger>
                        <Trigger Property="Group" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="groupBorder" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="separatorGrid" Value="-1,0,0,1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMinimized" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="selectedBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="selectedBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter Property="Foreground" Value="Black" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMinimized" Value="False" />
                                <Condition Property="Group" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="selectedBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="selectedBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter Property="Foreground" Value="Black" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected"
                               Value="True" />
                                <Condition Property="IsMinimized"
                               Value="True" />
                                <Condition Property="IsOpen"
                               Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="selectedBorder" Value="1" />
                            <Setter Property="Background"
                        TargetName="grid"
                        Value="Transparent" />
                            <Setter Property="Foreground"
                        Value="{Binding Group.Foreground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected"
                               Value="True" />
                                <Condition Property="IsMinimized"
                               Value="True" />
                                <Condition Property="IsOpen"
                               Value="True" />
                                <Condition Property="Group"
                               Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="selectedBorder" Value="1" />
                            <Setter Property="Background"
                        TargetName="grid"
                        Value="Transparent" />
                            <!--Setter Property="Foreground"
                        Value="{Binding Path=(Fluent:RibbonProperties.MouseOverForeground), RelativeSource={RelativeSource Self}}" /-->
                        </MultiTrigger>
                        <Trigger Property="IsSeparatorVisible"
                     Value="True">
                            <Setter Property="Visibility"
                        TargetName="separatorGrid"
                        Value="Visible" />
                            <Setter Property="Margin"
                        TargetName="PART_ContentContainer"
                        Value="6,2,6,0" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsContextual, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                                <Condition Binding="{Binding Group.Visibility, RelativeSource={RelativeSource TemplatedParent}}" Value="Collapsed" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Text="{Binding}"
                               TextWrapping="NoWrap"
                               TextTrimming="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Fluent:RibbonProperties.AppTheme"
                     Value="BaseLight">
                <Setter Property="Fluent:RibbonProperties.MouseOverForeground"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.HighlightBrush}" />
            </Trigger>
            <Trigger Property="Fluent:RibbonProperties.AppTheme"
                     Value="BaseDark">
                <Setter Property="Fluent:RibbonProperties.MouseOverForeground"
                        Value="{DynamicResource BlackBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Fluent:Backstage}" TargetType="{x:Type Fluent:Backstage}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Fluent:FrameworkHelper.UseLayoutRounding" Value="True" />
        <Setter Property="Fluent:KeyTip.Keys" Value="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.BackstageButtonKeyTip, Mode=OneWay}" />
        <Setter Property="HideAnimationDuration" Value="0:0:0.3" />
        <Setter Property="HideContextTabsOnOpen" Value="True" />
        <Setter Property="IsOpenAnimationEnabled" Value="{DynamicResource {x:Static SystemParameters.ClientAreaAnimationKey}}" />
        <Setter Property="Fluent:RibbonProperties.AppTheme" Value="{DynamicResource Fluent.Ribbon.AppTheme}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:Backstage}">
                    <Border x:Name="border2" Background="Transparent" Margin="0,1,0,-1">
                        <Grid>
                            <Grid Margin="2,0">
                                <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" BorderBrush="#FF1F48A1" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF4488E5"/>
                                                <GradientStop Offset="0.375" Color="#FF2860B2"/>
                                                <GradientStop Offset="0.625" Color="#FF2860B2"/>
                                                <GradientStop Offset="1" Color="#FF4488E5"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderThickness="1,1,1,0" CornerRadius="2,2,0,0">
                                        <Border.Background>
                                            <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1" RadiusX="0.75">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF4F94E6"/>
                                                    <GradientStop Offset="1" Color="#004F94E6"/>
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF4387E5"/>
                                                    <GradientStop Offset="0.375" Color="#FF3374C6"/>
                                                    <GradientStop Offset="0.625" Color="#FF3374C6"/>
                                                    <GradientStop Offset="1" Color="#FF4387E5"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                </Border>
                                <!--Border x:Name="IdleBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Background="#FF324FA3" Opacity="1" BorderBrush="#FF001D73" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0">
                                    <Border BorderBrush="Transparent" BorderThickness="0" CornerRadius="1,1,0,0" Margin="1,1,1,0">
                                        <Border.Background>
                                            <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.5">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF5C7FDF"/>
                                                    <GradientStop Offset="1" Color="#FF142E74"/>
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Border.Background>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.125" Color="#FF6F90EB"/>
                                                        <GradientStop Offset="0.5" Color="#30FFFFFF"/>
                                                        <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Border>
                                </Border-->
                                <Border x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" BorderBrush="#FF1F48A1" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF4786E5"/>
                                                <GradientStop Offset="0.375" Color="#FF2F64BA"/>
                                                <GradientStop Offset="0.625" Color="#FF2F64BA"/>
                                                <GradientStop Offset="1" Color="#FF4786E5"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderThickness="1,1,1,0" CornerRadius="2,2,0,0">
                                        <Border.Background>
                                            <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1" RadiusX="0.75">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF68ABF0"/>
                                                    <GradientStop Offset="1" Color="#0068ABF0"/>
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF55A1F3"/>
                                                    <GradientStop Offset="0.375" Color="#FF4991DE"/>
                                                    <GradientStop Offset="0.625" Color="#FF4991DE"/>
                                                    <GradientStop Offset="1" Color="#FF55A1F3"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                </Border>
                                <Border x:Name="PressedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" BorderBrush="#FF1F48A1" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF4488E5"/>
                                                <GradientStop Offset="0.375" Color="#FF2860B2"/>
                                                <GradientStop Offset="0.625" Color="#FF2860B2"/>
                                                <GradientStop Offset="1" Color="#FF4488E5"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderThickness="1,1,1,0" CornerRadius="2,2,0,0">
                                        <Border.Background>
                                            <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1" RadiusX="0.75">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.25" Color="#FF4F94E6"/>
                                                    <GradientStop Offset="1" Color="#404F94E6"/>
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF4387E5"/>
                                                    <GradientStop Offset="0.375" Color="#FF3374C6"/>
                                                    <GradientStop Offset="0.625" Color="#FF3374C6"/>
                                                    <GradientStop Offset="1" Color="#FF4387E5"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                </Border>
                                <!--TextBlock x:Name="LabelTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Text="File">
                                    <TextBlock.Effect>
                                        <DropShadowEffect Color="#FF7A9BCA" Direction="0" ShadowDepth="0" BlurRadius="3" Opacity="1"/>
                                    </TextBlock.Effect>
                                </TextBlock-->
                                <DockPanel x:Name="LabelTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
                                    <DockPanel.Effect>
                                        <DropShadowEffect Color="#FF3A5399" Direction="270" ShadowDepth="1" BlurRadius="1" Opacity="1"/>
                                    </DockPanel.Effect>
                                    <Path Data="M 0 0 L 3 3 L 6 0 Z" Fill="White" Stroke="Transparent" StrokeThickness="0" Margin="3,0,0,0" DockPanel.Dock="Right" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <StackPanel Width="14" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" SnapsToDevicePixels="True">
                                        <Rectangle Height="2" Fill="White" Margin="0,0,0,2"/>
                                        <Rectangle Height="2" Fill="White" Margin="0,0,0,2"/>
                                        <Rectangle Height="2" Fill="White" Margin="0,0,0,2"/>
                                    </StackPanel>
                                </DockPanel>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="LabelTextBlock"
                                                         Storyboard.TargetProperty="Opacity" To="0.75"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="LabelTextBlock"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Fluent:RibbonProperties.AppTheme" Value="BaseLight">
                <Setter Property="Background"  Value="{DynamicResource Fluent.Ribbon.Brushes.AccentBaseColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}" />
            </Trigger>
            <Trigger Property="Fluent:RibbonProperties.AppTheme" Value="BaseDark">
                <Setter Property="Background"  Value="{DynamicResource WhiteBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
            </Trigger>
            <Trigger Property="IsOpenAnimationEnabled" Value="False">
                <Setter Property="HideAnimationDuration" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Fluent:BackstageTabControl}" TargetType="{x:Type Fluent:BackstageTabControl}">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="Fluent:RibbonProperties.AppTheme" Value="{DynamicResource Fluent.Ribbon.AppTheme}" />
        <Setter Property="SelectedContentMargin" Value="0"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <!--Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform x:Name="BackstageRootScaleTransform" ScaleX="0" ScaleY="0"/>
            </Setter.Value>
        </Setter-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:BackstageTabControl}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Type Fluent:Button}" BasedOn="{StaticResource PlexRibbonBackstageButtonStyle}" TargetType="{x:Type Fluent:Button}"/>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid x:Name="grid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="54" />
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="132" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Canvas Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Row="1"/>
                            <Grid Grid.ColumnSpan="2" Grid.Row="0">
                                <Canvas Background="#01000000" Margin="53,0,0,0" VerticalAlignment="Bottom" Height="23"/>
                                <Canvas VerticalAlignment="Bottom" Height="2" UseLayoutRounding="False" Margin="53,0,0,0">
                                    <Canvas.Effect>
                                        <DropShadowEffect x:Name="BaseShadowEffect" Color="Black" Direction="-45" ShadowDepth="0" BlurRadius="3" Opacity="0.375"/>
                                    </Canvas.Effect>
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF5398F1"/>
                                                <GradientStop Offset="1" Color="#FF427ADB"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Canvas.Background>
                                    <Canvas.OpacityMask>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop x:Name="OpaqueBlueStripStop" Offset="0" Color="Black"/>
                                                <GradientStop x:Name="TransparentBlueStripStop" Offset="0" Color="Transparent"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Canvas.OpacityMask>
                                </Canvas>
                            </Grid>
                            <Border x:Name="ItemsPanelBorder" Grid.Column="0" Grid.Row="1" CornerRadius="0,0,0,4">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFEDF5FC"/>
                                            <GradientStop Offset="1" Color="#FFC2D3EA"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid x:Name="PART_ItemsPanelGrid" VerticalAlignment="Stretch">
                                    <Fluent:WindowSteeringHelperControl Height="{Binding SelectedContentMargin.Top, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top" IsEnabled="{TemplateBinding IsWindowSteeringHelperEnabled}" />
                                    <Button x:Name="backbutton" Style="{DynamicResource BackstageBackButtonStyle}" Width="0" Height="0" Visibility="Hidden"/>
                                    <ItemsPresenter Margin="0,77,0,0" Height="Auto"/>
                                </Grid>
                            </Border>
                            <Border x:Name="PART_SelectedContentGrid" CornerRadius="0,0,4,0" BorderThickness="1,0,0,0" Height="Auto" Grid.Column="1" Grid.Row="1" Background="White">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFCEDDEB"/>
                                            <GradientStop Offset="1" Color="#FF86A1BF"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="ItemsPanelTranslateTransform" X="-132" Y="0"/>
                                </Border.RenderTransform>
                                <Grid>
                                    <Canvas Width="5" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="-5,0,0,0">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#00000000"/>
                                                    <GradientStop Offset="1" Color="#40000000"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Canvas.Background>
                                    </Canvas>
                                    <ContentPresenter x:Name="PART_SelectedContentHost" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto" ContentSource="SelectedContent"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TransparentBlueStripStop" Storyboard.TargetProperty="Offset" To="1" Duration="0:0:0.5" />
                                        <DoubleAnimation Storyboard.TargetName="OpaqueBlueStripStop" Storyboard.TargetProperty="Offset" To="0" Duration="0:0:0.5" />
                                        <DoubleAnimation Storyboard.TargetName="ItemsPanelTranslateTransform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TransparentBlueStripStop" Storyboard.TargetProperty="Offset" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="OpaqueBlueStripStop" Storyboard.TargetProperty="Offset" To="-0.25" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="ItemsPanelTranslateTransform" Storyboard.TargetProperty="X" To="-132" Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Fluent:BackstageTabItem}" TargetType="{x:Type Fluent:BackstageTabItem}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}" />
        <Setter Property="Height" Value="37" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PlexDarkRibbonForegroundBrush}"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:BackstageTabItem}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Type Fluent:Button}" TargetType="{x:Type Fluent:Button}" BasedOn="{StaticResource {x:Type Fluent:Button}}">
                            <Setter Property="Foreground" Value="Black"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="rootGrid" Background="Transparent">
                        <Border x:Name="HoverBackground" BorderBrush="#FF527DE0" BorderThickness="0,1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0">
                            <Border Background="#7FC2DFF9" BorderBrush="#FFF0F5FC" BorderThickness="0,1"/>
                        </Border>
                        <Border x:Name="SelectedBackground" Background="#FF135CC1" BorderBrush="#FF073F97" BorderThickness="0,1" CornerRadius="0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="0" ClipToBounds="True">
                            <Grid ClipToBounds="True">
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="35">
                                    <Canvas.RenderTransform>
                                        <TranslateTransform x:Name="SelectedGlowTransform" X="-96" Y="0"/>
                                    </Canvas.RenderTransform>
                                    <Canvas.Background>
                                        <RadialGradientBrush GradientOrigin="0.5,1" Center="0.5,1" RadiusY="1.5">
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF64ACF9"/>
                                                <GradientStop Offset="1" Color="#0064ACF9"/>
                                            </RadialGradientBrush.GradientStops>
                                        </RadialGradientBrush>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="5">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#00073F97"/>
                                                <GradientStop Offset="1" Color="#40073F97"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="5">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#40073F97"/>
                                                <GradientStop Offset="1" Color="#00073F97"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Canvas.Background>
                                </Canvas>
                            </Grid>
                        </Border>
                        <ContentControl x:Name="PART_Header" Foreground="Black" Margin="25,0,5,0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Header}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Header" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Height" To="37" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="SelectedGlowTransform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Height" To="0" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="SelectedGlowTransform" Storyboard.TargetProperty="X" To="-96" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="PART_Header" Property="Foreground" Value="White" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Fluent:RibbonGroupBox}" TargetType="{x:Type Fluent:RibbonGroupBox}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Fluent:KeyTip.Margin" Value="0,15,0,0" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:RibbonGroupBox}">
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource PlexRibbonSeparatorStyle}" />
                        </ResourceDictionary>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid2" HorizontalAlignment="Stretch">
                        <Grid>
                            <ContentControl x:Name="border1" Focusable="False" Margin="0,0,4,0">
                                <Grid x:Name="PART_ParentPanel" Height="Auto">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <DockPanel x:Name="PART_DownGrid" MaxWidth="{Binding ActualWidth, ElementName=PART_ParentPanel}" VerticalAlignment="Stretch" Height="Auto" Grid.Row="1">
                                        <Fluent:Button x:Name="PART_DialogLauncherButton" HorizontalAlignment="Stretch" Width="15" Height="14" Focusable="False" Grid.Column="1" IsTabStop="False" Template="{DynamicResource DialogLauncherButtonControlTemplate}" Background="Transparent" BorderBrush="Transparent" VerticalAlignment="Stretch" Icon="{TemplateBinding LauncherIcon}" DockPanel.Dock="Right" />
                                        <ContentControl Content="{TemplateBinding Header}" Height="Auto" HorizontalAlignment="Stretch" Margin="2,0" MinHeight="14" TextBlock.TextAlignment="Center" Foreground="{DynamicResource AeromaticRibbonFadedForegroundBrush}"/>
                                    </DockPanel>
                                    <Fluent:RibbonGroupBoxWrapPanel x:Name="PART_UpPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Stretch" Width="Auto" Height="Auto" IsItemsHost="True" Margin="0,0,5,0"/>
                                </Grid>
                            </ContentControl>
                            <Grid x:Name="grid1" Margin="0,0,4,0" Width="Auto" Height="Auto" Visibility="Collapsed" Grid.RowSpan="2">
                                <ContentControl Content="{TemplateBinding Header}" Style="{DynamicResource Fluent.Ribbon.Styles.RibbonGroupBox.TwoLineHeaderContentControl}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="5,38,5,0" />
                                <Border HorizontalAlignment="Center" VerticalAlignment="Top" Width="31" Height="31" BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonGroupBox.Collapsed.BorderBrush}" BorderThickness="1" Margin="5,3,8,0">
                                    <ContentPresenter x:Name="iconImage" Height="16" Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToImageConverter}, ConverterParameter='16,16'}" Width="16" SnapsToDevicePixels="True" />
                                </Border>
                                <Popup x:Name="PART_Popup" Width="Auto" Height="Auto" AllowsTransparency="True" PlacementTarget="{Binding ElementName=grid1, Mode=OneWay}" StaysOpen="True" IsOpen="{TemplateBinding IsDropDownOpen}">
                                    <Grid Width="Auto" Height="Auto" Margin="0,20">
                                        <Border x:Name="border" Height="Auto" Background="{DynamicResource Fluent.Ribbon.Brushes.Ribbon.Background}" BorderBrush="Transparent" BorderThickness="0">
                                            <ContentControl x:Name="popupContent" />
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <Rectangle x:Name="separator" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="1" Fill="{DynamicResource AeromaticRibbonFadedForegroundBrush}" Stroke="Transparent" StrokeThickness="0" Grid.RowSpan="2" Visibility="{Binding IsSeparatorVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Rectangle.OpacityMask>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="Transparent"/>
                                            <GradientStop Offset="0.125" Color="#C0FFFFFF"/>
                                            <GradientStop Offset="0.5" Color="White"/>
                                            <GradientStop Offset="1" Color="Transparent"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>
                        <Image x:Name="PART_SnappedImage" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="State" Value="Collapsed">
                            <Setter Property="Visibility" TargetName="grid1" Value="Visible" />
                            <Setter Property="UIElement.Visibility" TargetName="border1" Value="Collapsed" />
                            <Setter Property="HorizontalAlignment" TargetName="grid2" Value="Left" />
                            <Setter Property="Content" TargetName="border1" Value="{x:Null}" />
                            <Setter Property="Content" TargetName="popupContent" Value="{Binding ElementName=PART_ParentPanel}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="State" Value="Collapsed" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonGroupBox.Collapsed.MouseOver.Background}" />
                        </MultiTrigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonGroupBox.DropDownOpen.Background}" />
                        </Trigger>
                        <Trigger Property="IsLauncherVisible" Value="False">
                            <Setter Property="Visibility" TargetName="PART_DialogLauncherButton" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="State" Value="QuickAccess">
                <Setter Property="Height" Value="22" />
                <Setter Property="Width" Value="22" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="SnapsToDevicePixels" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Fluent:RibbonGroupBox}">
                            <Grid Width="22">
                                <Border x:Name="PART_ButtonBorder"
                    BorderThickness="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Height="Auto"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Stretch">
                                    <ContentPresenter x:Name="iconImage"
                                  HorizontalAlignment="Center"
                                  Height="16"
                                  VerticalAlignment="Center"
                                  Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToImageConverter}, ConverterParameter='16,16'}"
                                  Width="16"
                                  Margin="1,1,0,0"
                                  SnapsToDevicePixels="True" />
                                </Border>

                                <Popup x:Name="PART_Popup"
                   Placement="Bottom"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True"
                   Focusable="False"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Margin="0,0,-4,0"
                   VerticalAlignment="Top"
                   Grid.ColumnSpan="2">
                                    <Grid Width="Auto"
                      Height="Auto"
                      Margin="0,20">
                                        <Border x:Name="border"
                            Height="Auto"
                            Background="{DynamicResource Fluent.Ribbon.Brushes.Ribbon.Background}"
                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}"
                            BorderThickness="1">
                                            <Grid x:Name="PART_ParentPanel"
                              Margin="0,1,0,2"
                              Height="85">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>

                                                <Fluent:RibbonGroupBoxWrapPanel x:Name="PART_UpPanel"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="Stretch"
                                                            Width="Auto"
                                                            Height="Auto"
                                                            IsItemsHost="True"
                                                            Margin="2,0,4,0" />

                                                <Grid x:Name="PART_DownGrid"
                                  Margin="0,-2,2,2"
                                  Grid.Row="1"
                                  VerticalAlignment="Bottom"
                                  Height="Auto"
                                  MaxWidth="{Binding ActualWidth, ElementName=PART_UpPanel}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ContentControl Content="{TemplateBinding Header}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="2,0"/>
                                                    <Fluent:Button Margin="0,0,1,1" x:Name="PART_DialogLauncherButton" HorizontalAlignment="Stretch" Width="15" Height="14" Grid.Column="1" Focusable="False" IsTabStop="False" Template="{DynamicResource DialogLauncherButtonControlTemplate}" Background="Transparent" BorderBrush="Transparent" VerticalAlignment="Bottom" Icon="{TemplateBinding LauncherIcon}" Header="{TemplateBinding LauncherText}" Command="{Binding LauncherCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandTarget="{Binding LauncherCommandTarget, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding LauncherCommandParameter, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding LauncherToolTip, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsLauncherEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDropDownOpen"
                     Value="True">
                                    <Setter Property="BorderBrush"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                                    <Setter Property="Background"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="False">
                                    <Setter Property="Opacity"
                        TargetName="iconImage"
                        Value="0.5" />
                                    <Setter Property="Effect"
                        TargetName="iconImage">
                                        <Setter.Value>
                                            <Fluent:GrayscaleEffect />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                               Value="True" />
                                        <Condition Property="IsDropDownOpen"
                               Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                                    <Setter Property="BorderBrush"
                        TargetName="PART_ButtonBorder"
                        Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="{x:Type Fluent:ContextMenu}" TargetType="{x:Type Fluent:ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:ContextMenu}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Border IsHitTestVisible="False" Background="Black" BorderBrush="Transparent">
                            <Border.Effect>
                                <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="230" ShadowDepth="3" BlurRadius="3" Opacity="0.375"/>
                            </Border.Effect>
                        </Border>
                        <Border BorderThickness="1" CornerRadius="0" Margin="0" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource ContextMenuBackgroundBrush}" BorderBrush="{DynamicResource ContextMenuBorderBrush}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CurrentDirectoryListViewItemStyle" TargetType="{x:Type ListViewItem}"/>

    <Style x:Key="CurrentDirectoryListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FFD6E5F5"/>
        <Setter Property="BorderThickness" Value="1,0,0,0"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="IsSelected" Value="{Binding Selected}"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding CurrentView, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Value="Icons">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,4,4">
                                <WrapPanel IsItemsHost="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="{x:Type disk:DiskItem}">
                            <StackPanel x:Name="RootStackPanel" Width="{Binding IconSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}, Converter={StaticResource DoubleAdderConverter}, ConverterParameter=8}" MaxHeight="{Binding IconSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}, Converter={StaticResource DoubleAdderConverter}, ConverterParameter=41}" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top">
                                <Canvas Width="{Binding IconSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" Height="{Binding IconSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Center">
                                    <Canvas.Background>
                                        <Binding ConverterParameter="48">
                                            <Binding.Converter>
                                                <disk:DiskItemToIconImageBrushOrThumbnailConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Canvas.Background>
                                </Canvas>
                                <Grid>
                                    <TextBlock Text="{Binding ItemName}" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap"/>
                                </Grid>
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Style x:Key="CurrentDirectoryListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <WrapPanel IsItemsHost="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style-->

    <Style x:Key="NavigationPaneTreeViewStyle" TargetType="TreeView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemTemplate" Value="{DynamicResource NavigationPaneDataTemplate}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource NavigationPaneTreeViewItemStyle}"/>
        <Setter Property="Width" Value="190"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style x:Key="NavigationPaneTreeViewItemStyle" TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ItemTemplate" Value="{DynamicResource NavigationPaneDataTemplate}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource NavigationPaneTreeViewItemStyle}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="MinHeight" Value="21" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding">
            <Setter.Value>
                <Binding ConverterParameter="5" Path="Padding" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}">
                    <Binding.FallbackValue>
                        <Thickness>0</Thickness>
                    </Binding.FallbackValue>
                    <Binding.Converter>
                        <local:NavPaneTreeViewItemMarginConverter/>
                    </Binding.Converter>
                    <!--Binding>
                        <Binding.FallbackValue>
                            <Thickness>0</Thickness>
                        </Binding.FallbackValue>
                    </Binding>
                    <Binding Path="Margin" RelativeSource="{RelativeSource Mode=Self}"/-->
                </Binding>
            </Setter.Value>
        </Setter>
        <!-- Value="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeViewItem}, FallbackValue=0}"/-->
        <!--Setter Property="Width">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource ThicknessLeftToSubtractDoubleConverter}">
                    <Binding Path="Width" RelativeSource="{RelativeSource Mode=Self}"/>
                    <Binding Path="Padding" RelativeSource="{RelativeSource Mode=Self}"/>
                </MultiBinding>
            </Setter.Value>
        </Setter-->
        <Setter Property="Width" Value="{Binding Width, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}, FallbackValue=190}"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Tag" Value="{x:Static Visibility.Visible}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid HorizontalAlignment="Stretch" Height="Auto" Grid.Row="0">
                            <Border x:Name="HoverBackground" BorderThickness="1" BorderBrush="#C084ACDD" Padding="0" CornerRadius="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#C0F1F7FE"/>
                                            <GradientStop Offset="1" Color="#C0DEEDFE"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#C0EBF4FE"/>
                                                <GradientStop Offset="1" Color="#C0CFE4FE"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Border x:Name="SelectedBackground" BorderThickness="1" BorderBrush="#FF84ACDD" Padding="0" CornerRadius="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFF1F7FE"/>
                                            <GradientStop Offset="1" Color="#FFDEEDFE"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FFEBF4FE"/>
                                                <GradientStop Offset="1" Color="#FFCFE4FE"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <DockPanel Grid.Row="0" Margin="{TemplateBinding Padding}">
                                <ToggleButton x:Name="Expander" Margin="8,0" ClickMode="Release" IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}" VerticalContentAlignment="center" HorizontalContentAlignment="Left" SnapsToDevicePixels="True" UseLayoutRounding="True" Visibility="Visible" HorizontalAlignment="Center" VerticalAlignment="Center" FocusVisualStyle="{x:Null}" DockPanel.Dock="Left">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderBrush" Value="Transparent" />
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Setter Property="Width" Value="8"/>
                                            <Setter Property="Height" Value="16"/>
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                                <Path x:Name="Arrow" Data="M 0 0 L 3 3 L 0 6 Z" Stroke="#C0000000" StrokeThickness="1" VerticalAlignment="Center" RenderTransformOrigin="0,0.5">
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform x:Name="Rotator" Angle="0"/>
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}"/>
                                                            </StackPanel>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="Rotator" Storyboard.TargetProperty="Angle" To="45" Duration="0:0:0.125"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="Rotator" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.125"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="Arrow" Property="Fill" Value="#7F27C7F7"/>
                                                                <Setter TargetName="Arrow" Property="Stroke" Value="#FF27C7F7"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                    <!--Margin="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, PreviousData={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}}}"-->
                                </ToggleButton>
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </DockPanel>
                        </Grid>
                        <ItemsPresenter x:Name="ItemsHost" HorizontalAlignment="Stretch" Height="Auto" Visibility="Visible" Width="{TemplateBinding Width}" Grid.Row="1" Margin="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="{x:Static Visibility.Hidden}">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Expander" Property="Margin" Value="9,0,0,0"/>
                            <!--Setter TargetName="Expander" Property="Margin" Value="0"/-->
                        </Trigger>
                        <Trigger SourceName="Expander" Property="IsChecked" Value="True">
                            <Setter Property="IsExpanded" Value="True"/>
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NavigationFavoritesTreeViewItemStyle" TargetType="TreeViewItem" BasedOn="{StaticResource NavigationPaneTreeViewItemStyle}">
        <Setter Property="Tag" Value="{x:Static Visibility.Hidden}"/>
    </Style>

    <Style x:Key="NavigationButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="23"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="#01000000">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <!--RenderTransformOrigin="0.5,0.5">
                            Grid.RenderTransform>
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                            </Grid.RenderTransform-->
                            <Grid.Effect>
                                <DropShadowEffect x:Name="Shadow" Color="Black" Direction="270" BlurRadius="5" ShadowDepth="3" Opacity="0.375"/>
                            </Grid.Effect>
                            <Path x:Name="IdleBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Data="{TemplateBinding Tag}">
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFB9B9B9"/>
                                            <GradientStop Offset="1" Color="#FF606060"/>
                                            <!--GradientStop Offset="0" Color="#FFA5A5A5"/>
                                            <GradientStop Offset="1" Color="#FF595959"/-->
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Data="{TemplateBinding Tag}" Opacity="0">
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FF6DD5F4"/>
                                            <GradientStop Offset="1" Color="#FF2B709D"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="PressedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Data="{TemplateBinding Tag}" Opacity="0">
                                <!--Path.Effect>
                                    <DropShadowEffect Color="Black" Direction="90" BlurRadius="5" ShadowDepth="3" Opacity="0.125"/>
                                </Path.Effect-->
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FF36A7D4"/>
                                            <GradientStop Offset="1" Color="#FF223A68"/>
                                            <!--GradientStop Offset="0" Color="#FF223A68"/>
                                            <GradientStop Offset="1" Color="Black"/-->
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                        </Grid>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Shadow" Storyboard.TargetProperty="Opacity" To="0.125" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Shadow" Storyboard.TargetProperty="Opacity" To="0.375" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Shadow" Storyboard.TargetProperty="ShadowDepth" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="Shadow" Storyboard.TargetProperty="BlurRadius" To="3" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Shadow" Storyboard.TargetProperty="ShadowDepth" To="3" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="Shadow" Storyboard.TargetProperty="BlurRadius" To="5" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#7F000000" Stroke="#7FFFFFFF" StrokeThickness="1"/>
                        <Grid x:Name="IdleBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Opacity="1">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Ellipse.Fill>
                                    <RadialGradientBrush GradientOrigin="0.5,1" Center="0.5,1" RadiusY="1">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FF19DBFF"/>
                                            <GradientStop Offset="1" Color="#FF00355D"/>
                                        </RadialGradientBrush.GradientStops>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Ellipse.Fill>
                                    <RadialGradientBrush GradientOrigin="0.5,1" Center="0.5,1" RadiusY="1">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FF19DBFF"/>
                                            <GradientStop Offset="1" Color="#FF076C92"/>
                                        </RadialGradientBrush.GradientStops>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid x:Name="PressedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Opacity="0">
                        </Grid>
                        <Grid x:Name="DisabledBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Opacity="0">
                        </Grid>
                        <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1">
                            <Ellipse.Fill>
                                <RadialGradientBrush GradientOrigin="0.5,1" Center="0.5,1" RadiusX="1.5" RadiusY="1.1875">
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Offset="0.5" Color="Transparent"/>
                                        <GradientStop Offset="0.5" Color="#40FFFFFF"/>
                                        <GradientStop Offset="1" Color="#C0FFFFFF"/>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1">
                            <Ellipse.Fill>
                                <RadialGradientBrush GradientOrigin="0.5,0.625" Center="0.5,0.625" RadiusX="1.0625" RadiusY="1">
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Offset="0.375" Color="Transparent"/>
                                        <GradientStop Offset="0.875" Color="#FFFFFFFF"/>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                            Storyboard.TargetProperty="Opacity" To="1"
                                            Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                            Storyboard.TargetProperty="Opacity" To="1"
                                            Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                            Storyboard.TargetProperty="Opacity" To="0"
                                            Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                            Storyboard.TargetProperty="Opacity" To="1"
                                            Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                            Storyboard.TargetProperty="Opacity" To="1"
                                            Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                            Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationBarStyle" TargetType="{x:Type local:NavigationBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NavigationBar}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />

                            <Setter Property="AllowDrop" Value="true" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Padding" Value="5,0" />
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                        <Grid Margin="{TemplateBinding Padding}">
                                            <ScrollViewer x:Name="PART_ContentHost" Foreground="#7F000000" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsFocused" Value="False" >
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.125" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                        <Grid Margin="{TemplateBinding Padding}">
                                            <ScrollViewer x:Name="PART_ContentHost" Foreground="#7F000000" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <TextBlock x:Name="Watermark" Opacity="0" IsHitTestVisible="False" Focusable="False" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">search for...</TextBlock>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsFocused" Value="False" >
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.125" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                            <!-- STILL TRYING TO FIX THIS DATATRIGGER -->
                                            <!--DataTrigger Binding="{Binding TextBlock.Text, Source={x:Reference PART_ContentHost}, Converter={StaticResource StringIsNullOrWhiteSpaceConverter}}" Value="True">
                                                                            <DataTrigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="Watermark" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.125" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.EnterActions>
                                                                            <DataTrigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="Watermark" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.ExitActions>
                                                                        </DataTrigger-->
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid Height="37">
                        <Border BorderThickness="0,0,0,1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="#FFD6E5F5">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#FFECF1F8"/>
                                        <GradientStop Offset="1" Color="#FFFCFCFC"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Grid x:Name="ContentGrid">
                            <DockPanel>
                                <StackPanel x:Name="NavigationButtonsGroup" Orientation="Horizontal" Width="58" Height="26" Margin="6,0,15,0" VerticalAlignment="Center" DockPanel.Dock="Left">
                                    <!--StackPanel.Background>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Path Data="M 3.4395833 297 C 1.5399552 297 1.8e-6 295.46005 0 293.56042 c 1.8225384e-6 -1.89963 1.5399552 -3.43958 3.4395833 -3.43958 2.0381628 0 2.3494261 0.62133 4.2333331 0.62133 1.8839069 0 2.1951701 -0.62133 4.2333336 -0.62133 1.899628 0 3.439581 1.53995 3.439583 3.43958 C 15.345831 295.46005 13.805878 297 11.90625 297 9.8680865 297 9.5568233 296.37867 7.6729162 296.37867 5.7890095 296.37867 5.4777463 297 3.4395833 297 Z">
                                                    <Path.Fill>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0" Color="#C0000000" />
                                                            <GradientStop Offset="0.125" Color="#40000000" />
                                                            <GradientStop Offset="0.875" Color="#40FFFFFF" />
                                                            <GradientStop Offset="1" Color="#60FFFFFF" />
                                                        </LinearGradientBrush>
                                                    </Path.Fill>
                                                </Path>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </StackPanel.Background-->
                                    <Button x:Name="PART_BackButton" Style="{DynamicResource NavigationButtonStyle}" Margin="0,0,7,0">
                                        <Button.Tag>
                                            <PathGeometry Figures="M 0 5 L 5 10 L 7 10 L 3 6 L 12 6 L 12 4 L 3 4 L 7 0 L 5 0 Z" FillRule="NonZero"/>
                                        </Button.Tag>
                                    </Button>
                                    <Button x:Name="PART_ForwardButton" Style="{DynamicResource NavigationButtonStyle}">
                                        <Button.Tag>
                                            <PathGeometry Figures="M 12 5 L 7 10 L 5 10 L 9 6 L 0 6 L 0 4 L 9 4 L 5 0 L 7 0 Z" FillRule="NonZero"/>
                                        </Button.Tag>
                                        <!--ContentControl Content="{DynamicResource SmallForwardArrowPathIcon}">
                                            <ContentControl.RenderTransform>
                                                <ScaleTransform CenterX="7" CenterY="7" ScaleX="0.625" ScaleY="0.625"/>
                                            </ContentControl.RenderTransform>
                                        </ContentControl-->
                                    </Button>
                                </StackPanel>
                                <Border x:Name="SearchRegion" Width="204" Height="24" BorderBrush="#40FFFFFF" BorderThickness="1" CornerRadius="1" Margin="0,0,10,0" UseLayoutRounding="True" SnapsToDevicePixels="True" DockPanel.Dock="Right">
                                    <Border BorderThickness="1" CornerRadius="0.5">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.55" Color="#FF616263"/>
                                                    <GradientStop Offset="1" Color="#FFB8BDC4"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border Background="#40FFFFFF" BorderBrush="#7FFFFFFF" BorderThickness="1">
                                            <DockPanel Margin="-1">
                                                <ToggleButton x:Name="PART_SearchToggleButton" DockPanel.Dock="Right">/º</ToggleButton>
                                                <TextBox x:Name="PART_SearchTextBox" Style="{DynamicResource SearchTextBoxStyle}"/>
                                            </DockPanel>
                                        </Border>
                                    </Border>
                                </Border>
                                <Border x:Name="AddressBox" Height="24" BorderBrush="#40FFFFFF" BorderThickness="1" CornerRadius="1" Margin="10,0" UseLayoutRounding="True" SnapsToDevicePixels="True">
                                    <Border BorderThickness="1" CornerRadius="0.5">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.55" Color="#FF616263"/>
                                                    <GradientStop Offset="1" Color="#FFB8BDC4"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border Background="#40FFFFFF" BorderBrush="#7FFFFFFF" BorderThickness="1">
                                            <Grid Margin="-1">
                                                <TextBox x:Name="PART_PathTextBox" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                <StackPanel x:Name="PART_BreadcrumbsStackPanel" Orientation="Horizontal" HorizontalAlignment="Left"/>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </Border>
                            </DockPanel>
                            <Popup x:Name="PART_HistoryPopup">
                                <ListView x:Name="PART_PartHistoryListView"/>
                            </Popup>
                            <Popup x:Name="PART_SearchPredictionPopup"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border Background="#FFF1F5FB">
                        <Grid>
                            <Canvas Height="4" VerticalAlignment="Top">
                                <Canvas.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFCCD9EA"/>
                                            <GradientStop Offset="1" Color="#00CCD9EA"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Canvas.Background>
                            </Canvas>
                            <ItemsPresenter/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Width="1" Margin="3" Fill="{DynamicResource AeromaticRibbonFadedForegroundBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type StatusBarItem}" TargetType="{x:Type StatusBarItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <ContentPresenter Margin="3" Name="ContentSite" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <HierarchicalDataTemplate x:Key="NavigationPaneDataTemplate" DataType="{x:Type disk:DiskItem}" ItemsSource="{Binding SubItems}" ItemContainerStyle="{StaticResource NavigationPaneTreeViewItemStyle}">
        <!--TreeViewItem Style="{DynamicResource NavigationPaneTreeViewItemStyle}" ItemsSource="{Binding SubItems}" ItemTemplate="{DynamicResource NavigationPaneDataTemplate}">
            <TreeViewItem.Header-->
        <DockPanel Margin="0,2">
            <Canvas Width="16" Height="16" DockPanel.Dock="Left" Margin="0,0,8,0">
                <Canvas.Background>
                    <Binding ConverterParameter="16">
                        <Binding.Converter>
                            <disk:DiskItemToIconImageBrushConverter/>
                        </Binding.Converter>
                    </Binding>
                </Canvas.Background>
            </Canvas>
            <TextBlock Text="{Binding ItemName}"/>
        </DockPanel>
        <!--/TreeViewItem.Header>
        </TreeViewItem.Header-->
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="NavigationFavoritesDataTemplate" DataType="{x:Type disk:DiskItem}" ItemContainerStyle="{StaticResource NavigationFavoritesTreeViewItemStyle}">
        <!--TreeViewItem Style="{DynamicResource NavigationPaneTreeViewItemStyle}" ItemsSource="{Binding SubItems}" ItemTemplate="{DynamicResource NavigationPaneDataTemplate}">
            <TreeViewItem.Header-->
        <DockPanel Margin="0,2">
            <Canvas Width="16" Height="16" DockPanel.Dock="Left" Margin="0,0,8,0">
                <Canvas.Background>
                    <Binding ConverterParameter="16">
                        <Binding.Converter>
                            <disk:DiskItemToIconImageBrushConverter/>
                        </Binding.Converter>
                    </Binding>
                </Canvas.Background>
            </Canvas>
            <TextBlock Text="{Binding ItemName}"/>
        </DockPanel>
        <!--/TreeViewItem.Header>
        </TreeViewItem.Header-->
    </HierarchicalDataTemplate>

    <DropShadowEffect x:Key="IconOuterShadow" Color="Black" Direction="225" ShadowDepth="3" BlurRadius="25" Opacity="0.375" />

    <DropShadowEffect x:Key="IconInnerShadow" Color="#FF5AA8F5" Direction="225" ShadowDepth="2" BlurRadius="7" Opacity="1" />

    <DropShadowEffect x:Key="IconSmallShadow" Color="Black" Direction="225" ShadowDepth="1.5" BlurRadius="12.5" Opacity="0.375" />

    <LinearGradientBrush x:Key="IconPrimaryFillBrush" StartPoint="0,1" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF87BAE8"/>
            <GradientStop Offset="1" Color="#FF9DD0FE"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="IconPrimaryDarkFillBrush" StartPoint="0,1" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF5588B6"/>
            <GradientStop Offset="1" Color="#FF6B9ECC"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="IconSecondaryFillBrush" GradientOrigin="0.5,0.5" Center="0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFACD4FF"/>
            <GradientStop Offset="1" Color="#FFFAFBFF"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="IconTertiaryFillBrush" StartPoint="0,1" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FFA0D3FF"/>
            <GradientStop Offset="1" Color="#FFB6E9FF"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="IconForegroundBrush" StartPoint="0,1" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FF002452"/>
            <GradientStop Offset="1" Color="#FF073A68"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Grid x:Key="CopyButtonLargeIcon" Width="30" Height="32" UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Effect="{DynamicResource IconOuterShadow}">
            <Path Data="M 0 0 L 13 0 L 18 5 L 18 22 L 0 22 Z" StrokeThickness="0" Fill="{DynamicResource IconPrimaryFillBrush}"/>
            <Path Data="M 0 0 L 0 6 L 6 6 Z" HorizontalAlignment="Right" VerticalAlignment="Top" StrokeThickness="0" Fill="{DynamicResource IconSecondaryFillBrush}" Effect="{DynamicResource IconInnerShadow}"/>
        </Grid>
        <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Effect="{DynamicResource IconOuterShadow}">
            <Path Data="M 0 0 L 13 0 L 18 5 L 18 22 L 0 22 Z" StrokeThickness="0" Fill="{DynamicResource IconPrimaryFillBrush}"/>
            <Path Data="M 0 0 L 0 6 L 6 6 Z" HorizontalAlignment="Right" VerticalAlignment="Top" StrokeThickness="0" Fill="{DynamicResource IconSecondaryFillBrush}" Effect="{DynamicResource IconInnerShadow}"/>
        </Grid>
    </Grid>

    <Grid x:Key="PasteButtonLargeIcon" Width="24" Height="28" UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Border Background="{DynamicResource IconPrimaryFillBrush}" BorderBrush="{DynamicResource IconPrimaryDarkFillBrush}" BorderThickness="3" CornerRadius="1" Effect="{DynamicResource IconOuterShadow}">
            <Path Data="M 0 6 L 7 0 L 14 6 Z" HorizontalAlignment="Center" VerticalAlignment="Top" StrokeThickness="0" Fill="{DynamicResource IconSecondaryFillBrush}" Margin="0,-6">
                <Path.Effect>
                    <DropShadowEffect Color="#FF5AA8F5" Direction="135" ShadowDepth="3" BlurRadius="7" Opacity="1"/>
                </Path.Effect>
            </Path>
        </Border>
    </Grid>

    <Grid x:Key="CutButtonIcon" Width="16" Height="16" UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Grid Effect="{DynamicResource IconOuterShadow}" >
            <Path Data="m 12.315449 282 -5.4981337 7.73217 c -1.7253089 0.32017 -3.5727233 0.91709 -4.7478438 1.85197 -0.3465542 0.2757 -0.6386254 0.57846 -0.8374526 0.94097 -0.1988273 0.36252 -0.29141216 0.80816 -0.1914178 1.24053 0.1999887 0.86475 0.9861796 1.49354 2.315813 2.05991 L 3.7700132 296 l 0.1691995 -0.23789 0.011964 0.0106 8.3642723 -9.47841 z m -1.136543 3.58239 v 0.25725 l -0.945125 1.07137 z m -5.3938793 5.59999 -2.3739219 3.33921 c -0.8117398 -0.42222 -1.2174223 -0.82278 -1.2647243 -1.02731 -0.0279 -0.12065 -0.015234 -0.22319 0.076909 -0.39119 0.092143 -0.16801 0.2758698 -0.37876 0.5417806 -0.59031 0.6691648 -0.53236 1.819182 -0.97754 3.0199566 -1.3304 z" Fill="{DynamicResource IconPrimaryFillBrush}" Width="16" Height="16" StrokeThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        </Grid>
    </Grid>

    <Grid x:Key="CopyPathButtonIcon" Width="24" Height="24" UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center" Effect="{DynamicResource IconSmallShadow}">
        <Border Width="16" Height="12" Background="{DynamicResource IconPrimaryFillBrush}" BorderThickness="0" CornerRadius="1">
            <TextBlock Foreground="{DynamicResource IconForegroundBrush}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Stretch" FontSize="7" Text="\\..."/>
        </Border>
    </Grid>

    <Grid x:Key="PasteShortcutButtonIcon" Width="14" Height="16" UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#01000000">
        <Border Background="{DynamicResource IconPrimaryFillBrush}" BorderBrush="{DynamicResource IconPrimaryDarkFillBrush}" BorderThickness="2" CornerRadius="1" Effect="{DynamicResource IconSmallShadow}">
            <Grid>
                <Path Data="M 0 2 L 2 0 L 4 2 Z" HorizontalAlignment="Center" VerticalAlignment="Top" StrokeThickness="0" Fill="{DynamicResource IconSecondaryFillBrush}" Margin="0,-2">
                    <Path.Effect>
                        <DropShadowEffect Color="#FF5AA8F5" Direction="135" ShadowDepth="3" BlurRadius="1" Opacity="0.75"/>
                    </Path.Effect>
                </Path>
                <Canvas Width="8" Height="8" Background="{DynamicResource IconForegroundBrush}" Margin="-2,0,1,0">
                    <Canvas.OpacityMask>
                        <VisualBrush>
                            <VisualBrush.Visual>
                                <Grid Width="8" Height="8" Background="#01000000">
                                    <Path Data="M 0 0 L 4 0 L 4 4 Z" Fill="Black" Stroke="Black" StrokeThickness="0" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                    <Path Data="M 8 0 L 4 4 L 4 8 L 4 4 Z" Fill="Black" Stroke="Black" StrokeThickness="1"/>
                                </Grid>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Canvas.OpacityMask>
                </Canvas>
            </Grid>
        </Border>
    </Grid>

    <Grid x:Key="MoveToButtonLargeIcon" Width="30" Height="32" UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
            <Path Data="M 0 0 L 20 4 L 20 18 L 22 20 L 22 28 L 0 24 Z" StrokeThickness="0" Fill="{DynamicResource IconPrimaryFillBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" Effect="{DynamicResource IconOuterShadow}"/>
            <Path Data="M 0 0 L 7 5 L 8 32 L 0 24 Z" StrokeThickness="0" Fill="{DynamicResource IconTertiaryFillBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" Effect="{DynamicResource IconOuterShadow}"/>
        </Grid>
        <Path Data="M 0 8 L 8 0 L 8 5 L 16 5 L 16 11 L 8 11 L 8 16 Z" Fill="{DynamicResource IconSecondaryFillBrush}" Stroke="Transparent" StrokeThickness="0" HorizontalAlignment="Right" VerticalAlignment="Center" Effect="{DynamicResource IconInnerShadow}"/>
    </Grid>

    <Grid x:Key="CopyToButtonLargeIcon" Width="30" Height="32" UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
            <Path Data="M 0 0 L 20 4 L 20 18 L 22 20 L 22 28 L 0 24 Z" StrokeThickness="0" Fill="{DynamicResource IconPrimaryFillBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" Effect="{DynamicResource IconOuterShadow}"/>
            <Path Data="M 0 0 L 7 5 L 8 32 L 0 24 Z" StrokeThickness="0" Fill="{DynamicResource IconTertiaryFillBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" Effect="{DynamicResource IconOuterShadow}"/>
        </Grid>
        <Grid Width="30" Height="32" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="1,0.5" Effect="{DynamicResource IconInnerShadow}">
            <Grid.RenderTransform>
                <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
            </Grid.RenderTransform>
            <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                <Path Data="M 0 0 L 13 0 L 18 5 L 18 22 L 0 22 Z" StrokeThickness="0" Fill="{DynamicResource IconPrimaryFillBrush}"/>
                <Path Data="M 0 0 L 0 6 L 6 6 Z" HorizontalAlignment="Right" VerticalAlignment="Top" StrokeThickness="0" Fill="{DynamicResource IconSecondaryFillBrush}" Effect="{DynamicResource IconSmallShadow}"/>
            </Grid>
            <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Effect="{DynamicResource IconInnerShadow}">
                <Path Data="M 0 0 L 13 0 L 18 5 L 18 22 L 0 22 Z" StrokeThickness="0" Fill="{DynamicResource IconPrimaryFillBrush}"/>
                <Path Data="M 0 0 L 0 6 L 6 6 Z" HorizontalAlignment="Right" VerticalAlignment="Top" StrokeThickness="0" Fill="{DynamicResource IconSecondaryFillBrush}" Effect="{DynamicResource IconSmallShadow}"/>
            </Grid>
        </Grid>
    </Grid>

    <Grid x:Key="DeleteButtonLargeIcon" Width="28" Height="28" UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{DynamicResource IconPrimaryFillBrush}" Effect="{DynamicResource IconOuterShadow}">
        <Grid.OpacityMask>
            <VisualBrush>
                <VisualBrush.Visual>
                    <Grid Background="#01000000" Width="32" Height="32">
                        <Canvas>
                            <Canvas.Background>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Path Data="m 8.2035769 289.44032 c -2.0376073 1.04979 -5.1697653 3.45606 -5.6932662 5.40979 -0.1759565 0.65668 -0.061322 1.36838 -0.8976935 1.44103 -0.65430945 0.0568 -1.36836153 -0.74026 -0.63783485 -1.93713 1.73350825 -2.84013 5.72428765 -5.68705 7.22879455 -4.91369 z" Fill="Black" Stroke="Transparent" StrokeThickness="0"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Canvas.Background>
                        </Canvas>
                        <Canvas>
                            <Canvas.Background>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Path Data="m -7.70126483 0.59059 c -0.18478825 -0.48464 0.62555663 -1.01992 1.20479913 -0.77957 2.6825069 1.11308 4.7163748 3.69291 5.2444196 6.56733 -3.3136138 -4.83318 -6.08654335 -4.83659 -6.44921873 -5.78776 z" Fill="Black" Stroke="Transparent" StrokeThickness="0"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Canvas.Background>
                        </Canvas>
                    </Grid>
                </VisualBrush.Visual>
            </VisualBrush>
        </Grid.OpacityMask>
    </Grid>

    <!--Grid x:Key="RenameButtonLargeIcon" Width="32" Height="32" UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Border Height="12" Background="{DynamicResource IconPrimaryFillBrush}" BorderThickness="0" CornerRadius="1" Effect="{DynamicResource IconOuterShadow}"/>
        <Canvas Width="12" Height="24" Background="{DynamicResource IconSecondaryFillBrush}" HorizontalAlignment="Right" Margin="6,0" Effect="{DynamicResource IconOuterShadow}">
            <Canvas.OpacityMask>
                <VisualBrush>
                    <VisualBrush.Visual>
                        <Border Width="12" Height="24" Background="Transparent" BorderBrush="Black" BorderThickness="0,2">
                            <Canvas Width="2" Background="Black"/>
                        </Border>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Canvas.OpacityMask>
        </Canvas>
    </Grid-->
    <Grid x:Key="RenameButtonLargeIcon" Width="32" Height="32" UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Border Height="12" BorderBrush="{DynamicResource IconPrimaryFillBrush}" Background="{DynamicResource IconForegroundBrush}" BorderThickness="3,3,13,3" CornerRadius="0" Effect="{DynamicResource IconOuterShadow}"/>
        <Canvas Width="12" Height="24" Background="{DynamicResource IconSecondaryFillBrush}" HorizontalAlignment="Right" Margin="3,0" Effect="{DynamicResource IconInnerShadow}">
            <Canvas.OpacityMask>
                <VisualBrush>
                    <VisualBrush.Visual>
                        <Border Width="12" Height="24" Background="Transparent" BorderBrush="Black" BorderThickness="0,2">
                            <Canvas Width="2" Background="Black"/>
                        </Border>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Canvas.OpacityMask>
        </Canvas>
    </Grid>

    <Grid x:Key="NewFolderButtonLargeIcon" Width="30" Height="32" UseLayoutRounding="True" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
            <Path Data="M 0 0 L 20 4 L 20 18 L 22 20 L 22 28 L 0 24 Z" StrokeThickness="0" Fill="{DynamicResource IconPrimaryFillBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" Effect="{DynamicResource IconOuterShadow}"/>
            <Path Data="M 0 0 L 7 5 L 8 32 L 0 24 Z" StrokeThickness="0" Fill="{DynamicResource IconTertiaryFillBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" Effect="{DynamicResource IconOuterShadow}"/>
        </Grid>
    </Grid>
</ResourceDictionary>